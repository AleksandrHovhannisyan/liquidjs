{"version":3,"file":"liquid.min.js","sources":["../src/util/underscore.ts","../src/parser/lexical.ts","../src/util/error.ts","../src/util/assert.ts","../src/liquid-options.ts","../src/scope/block-mode.ts","../src/scope/scope.ts","../src/scope/scopes.ts","../src/fs/browser.ts","../src/parser/token.ts","../src/parser/tokenizer.ts","../src/parser/html-token.ts","../src/parser/delimited-token.ts","../src/parser/tag-token.ts","../src/parser/output-token.ts","../src/parser/whitespace-ctrl.ts","../src/render/render.ts","../src/render/syntax.ts","../src/template/tag/hash.ts","../src/template/template.ts","../src/template/tag/tag.ts","../src/template/filter.ts","../src/parser/parse-stream.ts","../src/template/value.ts","../src/template/output.ts","../src/template/html.ts","../src/parser/parser.ts","../src/builtin/tags/assign.ts","../src/util/promise.ts","../src/builtin/tags/for.ts","../src/builtin/tags/capture.ts","../src/builtin/tags/case.ts","../src/builtin/tags/comment.ts","../src/builtin/tags/include.ts","../src/builtin/tags/decrement.ts","../src/builtin/tags/cycle.ts","../src/builtin/tags/if.ts","../src/builtin/tags/increment.ts","../src/builtin/tags/layout.ts","../src/builtin/tags/block.ts","../src/builtin/tags/raw.ts","../src/builtin/tags/tablerow.ts","../src/builtin/tags/index.ts","../src/builtin/tags/unless.ts","../src/builtin/tags/break.ts","../src/builtin/tags/continue.ts","../src/builtin/filters/html.ts","../src/builtin/filters/string.ts","../src/builtin/filters/math.ts","../src/builtin/filters/url.ts","../src/builtin/filters/array.ts","../src/util/strftime.ts","../src/builtin/filters/index.ts","../src/builtin/filters/date.ts","../src/builtin/filters/object.ts","../src/liquid.ts"],"sourcesContent":["const toStr = Object.prototype.toString\nconst arrToStr = Array.prototype.toString\n\n/*\n * Checks if value is classified as a String primitive or object.\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is a string, else false.\n */\nexport function isString (value: any) {\n  return toStr.call(value) === '[object String]'\n}\n\nexport function isFunction (value: any) {\n  return typeof value === 'function'\n}\n\nexport function promisify (fn) {\n  return function (...args) {\n    return new Promise((resolve, reject) => {\n      fn(...args, (err, result) => {\n        err ? reject(err) : resolve(result)\n      })\n    })\n  }\n}\n\nexport function stringify (value: any): string {\n  if (isNil(value)) return ''\n  if (isFunction(value.to_liquid)) return stringify(value.to_liquid())\n  if (isFunction(value.toLiquid)) return stringify(value.toLiquid())\n  if (isFunction(value.to_s)) return value.to_s()\n  if ([toStr, arrToStr].indexOf(value.toString) > -1) return defaultToString(value)\n  if (isFunction(value.toString)) return value.toString()\n  return toStr.call(value)\n}\n\nfunction defaultToString (value: any): string {\n  const cache = []\n  return JSON.stringify(value, (key, value) => {\n    if (isObject(value)) {\n      if (cache.indexOf(value) !== -1) {\n        return\n      }\n      cache.push(value)\n    }\n    return value\n  })\n}\n\nexport function create<T1 extends object, T2 extends T1 = T1> (proto: T1): T2 {\n  return Object.create(proto)\n}\n\nexport function isNil (value: any): boolean {\n  return value === null || value === undefined\n}\n\nexport function isArray (value: any): boolean {\n  // be compatible with IE 8\n  return toStr.call(value) === '[object Array]'\n}\n\nexport function isError (value: any): boolean {\n  const signature = toStr.call(value)\n  // [object XXXError]\n  return signature.substr(-6, 5) === 'Error' ||\n        (typeof value.message === 'string' && typeof value.name === 'string')\n}\n\n/*\n * Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property.\n * The iteratee is invoked with three arguments: (value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning false.\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @return {Object} Returns object.\n */\nexport function forOwn (object, iteratee: ((val: any, key: string, obj: object) => boolean | void)) {\n  object = object || {}\n  for (const k in object) {\n    if (object.hasOwnProperty(k)) {\n      if (iteratee(object[k], k, object) === false) break\n    }\n  }\n  return object\n}\n\n/*\n * Assigns own enumerable string keyed properties of source objects to the destination object.\n * Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * Note: This method mutates object and is loosely based on Object.assign.\n *\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @return {Object} Returns object.\n */\nexport function assign (obj: object, ...srcs: object[]): object {\n  obj = isObject(obj) ? obj : {}\n  srcs.forEach(src => binaryAssign(obj, src))\n  return obj\n}\n\nfunction binaryAssign (target: object, src: object): object {\n  for (const key in src) if (src.hasOwnProperty(key)) target[key] = src[key]\n  return target\n}\n\nexport function last (arr: any[]): any {\n  return arr[arr.length - 1]\n}\n\nexport function uniq (arr: any[]): any[] {\n  const u = {}\n  const a = []\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    if (u.hasOwnProperty(arr[i])) {\n      continue\n    }\n    a.push(arr[i])\n    u[arr[i]] = 1\n  }\n  return a\n}\n\n/*\n * Checks if value is the language type of Object.\n * (e.g. arrays, functions, objects, regexes, new Number(0), and new String(''))\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is an object, else false.\n */\nexport function isObject (value: any): boolean {\n  const type = typeof value\n  return value !== null && (type === 'object' || type === 'function')\n}\n\n/*\n * A function to create flexibly-numbered lists of integers,\n * handy for each and map loops. start, if omitted, defaults to 0; step defaults to 1.\n * Returns a list of integers from start (inclusive) to stop (exclusive),\n * incremented (or decremented) by step, exclusive.\n * Note that ranges that stop before they start are considered to be zero-length instead of\n * negative â€” if you'd like a negative range, use a negative step.\n */\nexport function range (start: number, stop?: number, step?: number) {\n  if (arguments.length === 1) {\n    stop = start\n    start = 0\n  }\n  step = step || 1\n\n  const arr = []\n  for (let i = start; i < stop; i += step) {\n    arr.push(i)\n  }\n  return arr\n}\n\nexport function padStart (str: any, length: number, ch: string = ' ') {\n  str = String(str)\n  let n = length - str.length\n  while (n-- > 0) str = ch + str\n  return str\n}\n","// quote related\nconst singleQuoted = /'[^']*'/\nconst doubleQuoted = /\"[^\"]*\"/\nexport const quoted = new RegExp(`${singleQuoted.source}|${doubleQuoted.source}`)\nexport const quoteBalanced = new RegExp(`(?:${quoted.source}|[^'\"])*`)\n\n// basic types\nexport const integer = /-?\\d+/\nexport const number = /-?\\d+\\.?\\d*|\\.?\\d+/\nexport const bool = /true|false/\n\n// property access\nexport const identifier = /[\\w-]+[?]?/\nexport const subscript = new RegExp(`\\\\[(?:${quoted.source}|[\\\\w-\\\\.]+)\\\\]`)\nexport const literal = new RegExp(`(?:${quoted.source}|${bool.source}|${number.source})`)\nexport const variable = new RegExp(`${identifier.source}(?:\\\\.${identifier.source}|${subscript.source})*`)\n\n// range related\nexport const rangeLimit = new RegExp(`(?:${variable.source}|${number.source})`)\nexport const range = new RegExp(`\\\\(${rangeLimit.source}\\\\.\\\\.${rangeLimit.source}\\\\)`)\nexport const rangeCapture = new RegExp(`\\\\((${rangeLimit.source})\\\\.\\\\.(${rangeLimit.source})\\\\)`)\n\nexport const value = new RegExp(`(?:${variable.source}|${literal.source}|${range.source})`)\n\n// hash related\nexport const hash = new RegExp(`(?:${identifier.source})\\\\s*:\\\\s*(?:${value.source})`)\nexport const hashCapture = new RegExp(`(${identifier.source})\\\\s*:\\\\s*(${value.source})`, 'g')\n\n// full match\nexport const tagLine = new RegExp(`^\\\\s*(${identifier.source})\\\\s*([\\\\s\\\\S]*?)\\\\s*$`)\nexport const literalLine = new RegExp(`^${literal.source}$`, 'i')\nexport const variableLine = new RegExp(`^${variable.source}$`)\nexport const numberLine = new RegExp(`^${number.source}$`)\nexport const boolLine = new RegExp(`^${bool.source}$`, 'i')\nexport const quotedLine = new RegExp(`^${quoted.source}$`)\nexport const rangeLine = new RegExp(`^${rangeCapture.source}$`)\nexport const integerLine = new RegExp(`^${integer.source}$`)\n\n// filter related\nexport const valueDeclaration = new RegExp(`(?:${identifier.source}\\\\s*:\\\\s*)?${value.source}`)\nexport const valueList = new RegExp(`${valueDeclaration.source}(\\\\s*,\\\\s*${valueDeclaration.source})*`)\nexport const filter = new RegExp(`${identifier.source}(?:\\\\s*:\\\\s*${valueList.source})?`, 'g')\nexport const filterCapture = new RegExp(`(${identifier.source})(?:\\\\s*:\\\\s*(${valueList.source}))?`)\nexport const filterLine = new RegExp(`^${filterCapture.source}$`)\n\nexport const operators = [\n  /\\s+or\\s+/,\n  /\\s+and\\s+/,\n  /==|!=|<=|>=|<|>|\\s+contains\\s+/\n]\n\nexport function isInteger (str) {\n  return integerLine.test(str)\n}\n\nexport function isLiteral (str) {\n  return literalLine.test(str)\n}\n\nexport function isRange (str) {\n  return rangeLine.test(str)\n}\n\nexport function isVariable (str) {\n  return variableLine.test(str)\n}\n\nexport function matchValue (str) {\n  return value.exec(str)\n}\n\nexport function parseLiteral (str) {\n  let res = str.match(numberLine)\n  if (res) {\n    return Number(str)\n  }\n  res = str.match(boolLine)\n  if (res) {\n    return str.toLowerCase() === 'true'\n  }\n  res = str.match(quotedLine)\n  if (res) {\n    return str.slice(1, -1)\n  }\n  throw new TypeError(`cannot parse '${str}' as literal`)\n}\n","import * as _ from './underscore'\nimport Token from 'src/parser/token'\n\nfunction captureStack () {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor)\n  }\n}\n\nabstract class LiquidError {\n  name: string\n  message: string\n  stack: string\n  private line: string\n  private file: string\n  private input: string\n  private token: Token\n  private originalError: Error\n  constructor (err, token) {\n    this.input = token.input\n    this.line = token.line\n    this.file = token.file\n    this.originalError = err\n    this.token = token\n  }\n  captureStackTrace (obj) {\n    this.name = obj.constructor.name\n\n    captureStack.call(obj)\n    const err = this.originalError\n    const context = mkContext(this.input, this.line)\n    this.message = mkMessage(err.message, this.token)\n    this.stack = this.message + '\\n' + context +\n      '\\n' + (this.stack || this.message) +\n        (err.stack ? '\\nFrom ' + err.stack : '')\n  }\n}\n\nexport class TokenizationError extends LiquidError {\n  constructor (message, token) {\n    super({ message }, token)\n    super.captureStackTrace(this)\n  }\n}\nTokenizationError.prototype = _.create(Error.prototype) as any\nTokenizationError.prototype.constructor = TokenizationError\n\nexport class ParseError extends LiquidError {\n  constructor (err, token) {\n    super(err, token)\n    this.message = err.message\n    super.captureStackTrace(this)\n  }\n}\nParseError.prototype = _.create(Error.prototype) as any\nParseError.prototype.constructor = ParseError\n\nexport class RenderError extends LiquidError {\n  constructor (err, tpl) {\n    super(err, tpl.token)\n    this.message = err.message\n    super.captureStackTrace(this)\n  }\n}\nRenderError.prototype = _.create(Error.prototype) as any\nRenderError.prototype.constructor = RenderError\n\nexport class RenderBreakError {\n  message: string\n  resolvedHTML: string\n  constructor (message) {\n    captureStack.call(this)\n    this.message = message + ''\n  }\n}\nRenderBreakError.prototype = _.create(Error.prototype) as any\nRenderBreakError.prototype.constructor = RenderBreakError\n\nexport class AssertionError {\n  message: string\n  constructor (message) {\n    captureStack.call(this)\n    this.message = message + ''\n  }\n}\nAssertionError.prototype = _.create(Error.prototype) as any\nAssertionError.prototype.constructor = AssertionError\n\nfunction mkContext (input, targetLine) {\n  const lines = input.split('\\n')\n  const begin = Math.max(targetLine - 2, 1)\n  const end = Math.min(targetLine + 3, lines.length)\n\n  const context = _\n    .range(begin, end + 1)\n    .map(lineNumber => {\n      const indicator = (lineNumber === targetLine) ? '>> ' : '   '\n      const num = _.padStart(String(lineNumber), String(end).length)\n      const text = lines[lineNumber - 1]\n      return `${indicator}${num}| ${text}`\n    })\n    .join('\\n')\n\n  return context\n}\n\nfunction mkMessage (msg, token) {\n  msg = msg || ''\n  if (token.file) {\n    msg += ', file:' + token.file\n  }\n  if (token.line) {\n    msg += ', line:' + token.line\n  }\n  return msg\n}\n","import { AssertionError } from './error'\n\nexport default function (predicate: any, message?: string) {\n  if (!predicate) {\n    message = message || `expect ${predicate} to be true`\n    throw new AssertionError(message)\n  }\n}\n","import * as _ from './util/underscore'\n\nexport interface LiquidOptions {\n  /** `root` is a directory or an array of directories to resolve layouts and includes, as well as the filename passed in when calling `.renderFile()`. If an array, the files are looked up in the order they occur in the array. Defaults to `[\".\"]` */\n  root?: string | string[]\n  /** `extname` is used to lookup the template file when filepath doesn't include an extension name. Eg: setting to `\".html\"` will allow including file by basename. Defaults to `\"\"`. */\n  extname?: string\n  /** `cache` indicates whether or not to cache resolved templates. Defaults to `false`. */\n  cache?: boolean\n  /** `dynamicPartials`: if set, treat `<filepath>` parameter in `{%include filepath %}`, `{%layout filepath%}` as a variable, otherwise as a literal value. Defaults to `true`. */\n  dynamicPartials?: boolean\n  /** `strict_filters` is used to enable strict filter existence. If set to `false`, undefined filters will be rendered as empty string. Otherwise, undefined filters will cause an exception. Defaults to `false`. */\n  strict_filters?: boolean  // eslint-disable-line\n  /** `strict_variables` is used to enable strict variable derivation.  If set to `false`, undefined variables will be rendered as empty string.  Otherwise, undefined variables will cause an exception. Defaults to `false`. */\n  strict_variables?: boolean  // eslint-disable-line\n  /** `trim_tag_right` is used to strip blank characters (including ` `, `\\t`, and `\\r`) from the right of tags (`{% %}`) until `\\n` (inclusive). Defaults to `false`. */\n  trim_tag_right?: boolean  // eslint-disable-line\n  /** `trim_tag_left` is similar to `trim_tag_right`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trim_tag_left?: boolean   // eslint-disable-line\n  /** ``trim_value_right` is used to strip blank characters (including ` `, `\\t`, and `\\r`) from the right of values (`{{ }}`) until `\\n` (inclusive). Defaults to `false`. */\n  trim_value_right?: boolean  // eslint-disable-line\n  /** `trim_value_left` is similar to `trim_value_right`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trim_value_left?: boolean // eslint-disable-line\n  /** `greedy` is used to specify whether `trim_left`/`trim_right` is greedy. When set to `true`, all consecutive blank characters including `\\n` will be trimed regardless of line breaks. Defaults to `true`. */\n  greedy?: boolean\n}\n\nexport interface NormalizedOptions extends LiquidOptions {\n  root?: string[]\n}\n\nexport const defaultOptions: NormalizedOptions = {\n  root: ['.'],\n  cache: false,\n  extname: '',\n  dynamicPartials: true,\n  trim_tag_right: false,\n  trim_tag_left: false,\n  trim_value_right: false,\n  trim_value_left: false,\n  greedy: true,\n  strict_filters: false,\n  strict_variables: false\n}\n\nexport function normalize (options: LiquidOptions): NormalizedOptions {\n  options = options || {}\n  if (options.hasOwnProperty('root')) {\n    options.root = normalizeStringArray(options.root)\n  }\n  return options as NormalizedOptions\n}\n\nfunction normalizeStringArray (value: string | string[]): string[] {\n  if (_.isArray(value)) return value as string[]\n  if (_.isString(value)) return [value as string]\n  return []\n}\n","enum BlockMode {\n  /* store rendered html into blocks */\n  OUTPUT,\n  /* output rendered html directly */\n  STORE\n}\n\nexport default BlockMode\n","import * as _ from '../util/underscore'\nimport * as lexical from '../parser/lexical'\nimport assert from '../util/assert'\nimport { NormalizedOptions, defaultOptions } from '../liquid-options'\nimport BlockMode from './block-mode'\n\nexport default class Scope {\n  opts: NormalizedOptions\n  contexts: Array<object>\n  blocks: object = {}\n  blockMode: BlockMode = BlockMode.OUTPUT\n  constructor (ctx: object = {}, opts: NormalizedOptions = defaultOptions) {\n    this.opts = { ...defaultOptions, ...opts }\n    this.contexts = [ctx || {}]\n  }\n  getAll () {\n    return this.contexts.reduce((ctx, val) => _.assign(ctx, val), _.create(null))\n  }\n  get (path: string): any {\n    const paths = this.propertyAccessSeq(path)\n    const scope = this.findContextFor(paths[0]) || _.last(this.contexts)\n    return paths.reduce((value, key) => this.readProperty(value, key), scope)\n  }\n  set (path: string, v: any): void {\n    const paths = this.propertyAccessSeq(path)\n    let scope = this.findContextFor(paths[0]) || _.last(this.contexts)\n    paths.some((key, i) => {\n      if (!_.isObject(scope)) {\n        return true\n      }\n      if (i === paths.length - 1) {\n        scope[key] = v\n        return true\n      }\n      if (undefined === scope[key]) {\n        scope[key] = {}\n      }\n      scope = scope[key]\n    })\n  }\n  unshift (ctx: object) {\n    return this.contexts.unshift(ctx)\n  }\n  push (ctx: object) {\n    return this.contexts.push(ctx)\n  }\n  pop (ctx?: object): object {\n    if (!arguments.length) {\n      return this.contexts.pop()\n    }\n    const i = this.contexts.findIndex(scope => scope === ctx)\n    if (i === -1) {\n      throw new TypeError('scope not found, cannot pop')\n    }\n    return this.contexts.splice(i, 1)[0]\n  }\n  findContextFor (key: string, filter: ((conttext: object) => boolean) = () => true) {\n    for (let i = this.contexts.length - 1; i >= 0; i--) {\n      const candidate = this.contexts[i]\n      if (!filter(candidate)) continue\n      if (key in candidate) {\n        return candidate\n      }\n    }\n    return null\n  }\n  readProperty (obj, key) {\n    let val\n    if (_.isNil(obj)) {\n      val = undefined\n    } else {\n      obj = toLiquid(obj)\n      val = key === 'size' ? readSize(obj) : obj[key]\n      if (_.isFunction(obj.liquid_method_missing)) {\n        val = obj.liquid_method_missing(key)\n      }\n    }\n    if (_.isNil(val) && this.opts.strict_variables) {\n      throw new TypeError(`undefined variable: ${key}`)\n    }\n    return val\n  }\n\n  /*\n   * Parse property access sequence from access string\n   * @example\n   * accessSeq(\"foo.bar\")            // ['foo', 'bar']\n   * accessSeq(\"foo['bar']\")      // ['foo', 'bar']\n   * accessSeq(\"foo['b]r']\")      // ['foo', 'b]r']\n   * accessSeq(\"foo[bar.coo]\")    // ['foo', 'bar'], for bar.coo == 'bar'\n   */\n  propertyAccessSeq (str) {\n    str = String(str)\n    const seq = []\n    let name = ''\n    let j\n    let i = 0\n    while (i < str.length) {\n      switch (str[i]) {\n        case '[':\n          push()\n\n          const delemiter = str[i + 1]\n          if (/['\"]/.test(delemiter)) { // foo[\"bar\"]\n            j = str.indexOf(delemiter, i + 2)\n            assert(j !== -1, `unbalanced ${delemiter}: ${str}`)\n            name = str.slice(i + 2, j)\n            push()\n            i = j + 2\n          } else { // foo[bar.coo]\n            j = matchRightBracket(str, i + 1)\n            assert(j !== -1, `unbalanced []: ${str}`)\n            name = str.slice(i + 1, j)\n            if (!lexical.isInteger(name)) { // foo[bar] vs. foo[1]\n              name = String(this.get(name))\n            }\n            push()\n            i = j + 1\n          }\n          break\n        case '.':// foo.bar, foo[0].bar\n          push()\n          i++\n          break\n        default:// foo.bar\n          name += str[i]\n          i++\n      }\n    }\n    push()\n\n    if (!seq.length) {\n      throw new TypeError(`invalid path:\"${str}\"`)\n    }\n    return seq\n\n    function push () {\n      if (name.length) seq.push(name)\n      name = ''\n    }\n  }\n}\n\nfunction toLiquid (obj) {\n  if (_.isFunction(obj.to_liquid)) {\n    return obj.to_liquid()\n  }\n  if (_.isFunction(obj.toLiquid)) {\n    return obj.toLiquid()\n  }\n  return obj\n}\n\nfunction readSize (obj) {\n  if (!_.isNil(obj.size)) return obj.size\n  if (_.isArray(obj) || _.isString(obj)) return obj.length\n  return obj.size\n}\n\nfunction matchRightBracket (str, begin) {\n  let stack = 1 // count of '[' - count of ']'\n  for (let i = begin; i < str.length; i++) {\n    if (str[i] === '[') {\n      stack++\n    }\n    if (str[i] === ']') {\n      stack--\n      if (stack === 0) {\n        return i\n      }\n    }\n  }\n  return -1\n}\n","export class CaptureScope {}\nexport class AssignScope {}\nexport class IncrementScope {}\nexport class DecrementScope {}\n","import { last } from '../util/underscore'\nimport IFS from './ifs'\n\nfunction domResolve (root, path) {\n  const base = document.createElement('base')\n  base.href = root\n\n  const head = document.getElementsByTagName('head')[0]\n  head.insertBefore(base, head.firstChild)\n\n  const a = document.createElement('a')\n  a.href = path\n  const resolved = a.href\n  head.removeChild(base)\n\n  return resolved\n}\n\nfunction resolve (root, filepath, ext) {\n  if (root.length && last(root) !== '/') root += '/'\n  const url = domResolve(root, filepath)\n  return url.replace(/^(\\w+:\\/\\/[^/]+)(\\/[^?]+)/, (str, origin, path) => {\n    const last = path.split('/').pop()\n    if (/\\.\\w+$/.test(last)) return str\n    return origin + path + ext\n  })\n}\n\nasync function readFile (url: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        resolve(xhr.responseText as string)\n      } else {\n        reject(new Error(xhr.statusText))\n      }\n    }\n    xhr.onerror = () => {\n      reject(new Error('An error occurred whilst receiving the response.'))\n    }\n    xhr.open('GET', url)\n    xhr.send()\n  })\n}\n\nasync function exists () {\n  return true\n}\n\nexport default { readFile, resolve, exists } as IFS\n","export default class Token {\n  type: string\n  line: number\n  raw: string\n  input: string\n  file: string\n  value: string\n  constructor (raw, pos, input, file, line) {\n    this.line = line\n    this.raw = raw\n    this.input = input\n    this.file = file\n  }\n}\n","import whiteSpaceCtrl from './whitespace-ctrl'\nimport HTMLToken from './html-token'\nimport TagToken from './tag-token'\nimport OutputToken from './output-token'\nimport { LiquidOptions, defaultOptions } from 'src/liquid-options'\n\nenum ParseState { HTML, OUTPUT, TAG }\n\nexport default class Tokenizer {\n  options: LiquidOptions\n  constructor (options: LiquidOptions = defaultOptions) {\n    this.options = options\n  }\n  tokenize (input: string, file?: string) {\n    const tokens = []\n    let p = 0\n    let line = 1\n    let state = ParseState.HTML\n    let buffer = ''\n    let bufferBegin = 0\n\n    while (p < input.length) {\n      if (input[p] === '\\n') line++\n      const bin = input.substr(p, 2)\n      if (state === ParseState.HTML) {\n        if (bin === '{{' || bin === '{%') {\n          if (buffer) tokens.push(new HTMLToken(buffer, bufferBegin, input, file, line))\n          buffer = bin\n          bufferBegin = p\n          p += 2\n          state = bin === '{{' ? ParseState.OUTPUT : ParseState.TAG\n          continue\n        }\n      } else if (state === ParseState.OUTPUT && bin === '}}') {\n        buffer += '}}'\n        tokens.push(new OutputToken(buffer, bufferBegin, input, file, line))\n        p += 2\n        buffer = ''\n        bufferBegin = p\n        state = ParseState.HTML\n        continue\n      } else if (bin === '%}') {\n        buffer += '%}'\n        tokens.push(new TagToken(buffer, bufferBegin, input, file, line))\n        p += 2\n        buffer = ''\n        bufferBegin = p\n        state = ParseState.HTML\n        continue\n      }\n      buffer += input[p++]\n    }\n    if (buffer) tokens.push(new HTMLToken(buffer, bufferBegin, input, file, line))\n\n    whiteSpaceCtrl(tokens, this.options)\n    return tokens\n  }\n}\n","import Token from './token'\n\nexport default class HTMLToken extends Token {\n  constructor (str, begin, input, file, line) {\n    super(str, begin, input, file, line)\n    this.type = 'html'\n    this.value = str\n  }\n}\n","import Token from './token'\n\nexport default class DelimitedToken extends Token {\n  trimLeft: boolean\n  trimRight: boolean\n  constructor (raw, pos, input, file, line) {\n    super(raw, pos, input, file, line)\n    this.trimLeft = raw[2] === '-'\n    this.trimRight = raw[raw.length - 3] === '-'\n    this.value = raw.slice(this.trimLeft ? 3 : 2, this.trimRight ? -3 : -2).trim()\n  }\n}\n","import DelimitedToken from './delimited-token'\nimport { TokenizationError } from 'src/util/error'\nimport * as lexical from './lexical'\n\nexport default class TagToken extends DelimitedToken {\n  name: string\n  args: string\n  constructor (raw, pos, input, file, line) {\n    super(raw, pos, input, file, line)\n    this.type = 'tag'\n    const match = this.value.match(lexical.tagLine)\n    if (!match) {\n      throw new TokenizationError(`illegal tag syntax`, this)\n    }\n    this.name = match[1]\n    this.args = match[2]\n  }\n}\n","import DelimitedToken from './delimited-token'\n\nexport default class OutputToken extends DelimitedToken {\n  constructor (raw, pos, input, file, line) {\n    super(raw, pos, input, file, line)\n    this.type = 'output'\n  }\n}\n","import DelimitedToken from 'src/parser/delimited-token'\nimport Token from 'src/parser/token'\nimport TagToken from 'src/parser/tag-token'\nimport { LiquidOptions } from 'src/liquid-options'\n\nexport default function whiteSpaceCtrl (tokens: Token[], options: LiquidOptions) {\n  options = { greedy: true, ...options }\n  let inRaw = false\n\n  tokens.forEach((token: Token, i: number) => {\n    if (shouldTrimLeft(token as DelimitedToken, inRaw, options)) {\n      trimLeft(tokens[i - 1], options.greedy)\n    }\n\n    if (token.type === 'tag' && (token as TagToken).name === 'raw') inRaw = true\n    if (token.type === 'tag' && (token as TagToken).name === 'endraw') inRaw = false\n\n    if (shouldTrimRight(token as DelimitedToken, inRaw, options)) {\n      trimRight(tokens[i + 1], options.greedy)\n    }\n  })\n}\n\nfunction shouldTrimLeft (token: DelimitedToken, inRaw: boolean, options) {\n  if (inRaw) return false\n  if (token.type === 'tag') return token.trimLeft || options.trim_tag_left\n  if (token.type === 'output') return token.trimLeft || options.trim_value_left\n}\n\nfunction shouldTrimRight (token: DelimitedToken, inRaw: boolean, options) {\n  if (inRaw) return false\n  if (token.type === 'tag') return token.trimRight || options.trim_tag_right\n  if (token.type === 'output') return token.trimRight || options.trim_value_right\n}\n\nfunction trimLeft (token: Token, greedy: boolean) {\n  if (!token || token.type !== 'html') return\n\n  const rLeft = greedy ? /\\s+$/g : /[\\t\\r ]*$/g\n  token.value = token.value.replace(rLeft, '')\n}\n\nfunction trimRight (token: Token, greedy: boolean) {\n  if (!token || token.type !== 'html') return\n\n  const rRight = greedy ? /^\\s+/g : /^[\\t\\r ]*\\n?/g\n  token.value = token.value.replace(rRight, '')\n}\n","import { RenderBreakError, RenderError } from 'src/util/error'\nimport assert from 'src/util/assert'\n\nexport default class Render {\n  async renderTemplates (templates, scope) {\n    assert(scope, 'unable to evalTemplates: scope undefined')\n\n    let html = ''\n    for (const tpl of templates) {\n      try {\n        html += await tpl.render(scope)\n      } catch (e) {\n        if (e instanceof RenderBreakError) {\n          e.resolvedHTML = html\n          throw e\n        }\n        throw e instanceof RenderError ? e : new RenderError(e, tpl)\n      }\n    }\n    return html\n  }\n}\n","import * as lexical from '../parser/lexical'\nimport assert from '../util/assert'\n\nconst operators = {\n  '==': (l, r) => l === r,\n  '!=': (l, r) => l !== r,\n  '>': (l, r) => l !== null && r !== null && l > r,\n  '<': (l, r) => l !== null && r !== null && l < r,\n  '>=': (l, r) => l !== null && r !== null && l >= r,\n  '<=': (l, r) => l !== null && r !== null && l <= r,\n  'contains': (l, r) => {\n    if (!l) return false\n    if (typeof l.indexOf !== 'function') return false\n    return l.indexOf(r) > -1\n  },\n  'and': (l, r) => isTruthy(l) && isTruthy(r),\n  'or': (l, r) => isTruthy(l) || isTruthy(r)\n}\n\nexport function evalExp (exp, scope) {\n  assert(scope, 'unable to evalExp: scope undefined')\n  const operatorREs = lexical.operators\n  let match\n  for (let i = 0; i < operatorREs.length; i++) {\n    const operatorRE = operatorREs[i]\n    const expRE = new RegExp(`^(${lexical.quoteBalanced.source})(${operatorRE.source})(${lexical.quoteBalanced.source})$`)\n    if ((match = exp.match(expRE))) {\n      const l = evalExp(match[1], scope)\n      const op = operators[match[2].trim()]\n      const r = evalExp(match[3], scope)\n      return op(l, r)\n    }\n  }\n\n  if ((match = exp.match(lexical.rangeLine))) {\n    const low = evalValue(match[1], scope)\n    const high = evalValue(match[2], scope)\n    const range = []\n    for (let j = low; j <= high; j++) {\n      range.push(j)\n    }\n    return range\n  }\n\n  return evalValue(exp, scope)\n}\n\nexport function evalValue (str, scope) {\n  str = str && str.trim()\n  if (!str) return undefined\n\n  if (lexical.isLiteral(str)) {\n    return lexical.parseLiteral(str)\n  }\n  if (lexical.isVariable(str)) {\n    return scope.get(str)\n  }\n  throw new TypeError(`cannot eval '${str}' as value`)\n}\n\nexport function isTruthy (val) {\n  return !isFalsy(val)\n}\n\nexport function isFalsy (val) {\n  return val === false || undefined === val || val === null\n}\n","import { hashCapture } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\n\n/**\n * Key-Value Pairs Representing Tag Arguments\n * Example:\n *    For the markup `{% include 'head.html' foo='bar' %}`,\n *    hash['foo'] === 'bar'\n */\nexport default class Hash {\n  [key: string]: any\n  constructor (markup, scope) {\n    let match\n    hashCapture.lastIndex = 0\n    while ((match = hashCapture.exec(markup))) {\n      const k = match[1]\n      const v = match[2]\n      this[k] = evalValue(v, scope)\n    }\n  }\n}\n","import Token from 'src/parser/token'\n\nexport default class Template {\n  token: Token;\n  constructor (token) {\n    this.token = token\n  }\n}\n","import { create, stringify } from 'src/util/underscore'\nimport assert from 'src/util/assert'\nimport Scope from 'src/scope/scope'\nimport ITagImpl from './itag-impl'\nimport ITagImplOptions from './itag-impl-options'\nimport Liquid from 'src/liquid'\nimport Hash from './hash'\nimport Template from 'src/template/template'\nimport ITemplate from 'src/template/itemplate'\nimport TagToken from 'src/parser/tag-token'\nimport Token from 'src/parser/token'\n\nexport default class Tag extends Template implements ITemplate {\n  name: string\n  token: TagToken\n  private impl: ITagImpl\n  static impls: { [key: string]: ITagImplOptions } = {}\n\n  constructor (token: TagToken, tokens: Token[], liquid: Liquid) {\n    super(token)\n    this.name = token.name\n\n    const impl = Tag.impls[token.name]\n    assert(impl, `tag ${token.name} not found`)\n    this.impl = create<ITagImplOptions, ITagImpl>(impl)\n    this.impl.liquid = liquid\n    if (this.impl.parse) {\n      this.impl.parse(token, tokens)\n    }\n  }\n  async render (scope: Scope) {\n    const hash = new Hash(this.token.args, scope)\n    const impl = this.impl\n    if (typeof impl.render !== 'function') {\n      return ''\n    }\n    const html = await impl.render(scope, hash)\n    return stringify(html)\n  }\n  static register (name: string, tag: ITagImplOptions) {\n    Tag.impls[name] = tag\n  }\n  static clear () {\n    Tag.impls = {}\n  }\n}\n","import assert from 'src/util/assert'\nimport * as lexical from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\nimport Scope from 'src/scope/scope'\n\ntype impl = (value: any, ...args: any[]) => any\n\nconst valueRE = new RegExp(`${lexical.value.source}`, 'g')\n\nexport default class Filter {\n  name: string\n  impl: impl\n  args: string[]\n  private static impls: {[key: string]: impl} = {}\n\n  constructor (str: string, strictFilters: boolean = false) {\n    const match = lexical.filterLine.exec(str)\n    assert(match, 'illegal filter: ' + str)\n\n    const name = match[1]\n    const argList = match[2] || ''\n    const impl = Filter.impls[name]\n    if (!impl && strictFilters) throw new TypeError(`undefined filter: ${name}`)\n\n    this.name = name\n    this.impl = impl || (x => x)\n    this.args = this.parseArgs(argList)\n  }\n  parseArgs (argList: string): string[] {\n    let match; const args = []\n    while ((match = valueRE.exec(argList.trim()))) {\n      const v = match[0]\n      const re = new RegExp(`${v}\\\\s*:`, 'g')\n      const keyMatch = re.exec(match.input)\n      const currentMatchIsKey = keyMatch && keyMatch.index === match.index\n      currentMatchIsKey ? args.push(`'${v}'`) : args.push(v)\n    }\n    return args\n  }\n  render (value: any, scope: Scope): any {\n    const args = this.args.map(arg => evalValue(arg, scope))\n    args.unshift(value)\n    return this.impl.apply(null, args)\n  }\n  static register (name, filter) {\n    Filter.impls[name] = filter\n  }\n  static clear () {\n    Filter.impls = {}\n  }\n}\n","import Token from 'src/parser/token'\nimport ITemplate from 'src/template/itemplate'\n\ntype parseToken = (token: Token, remainTokens: Array<Token>) => ITemplate\ntype eventHandler = ((arg?: Token | ITemplate) => void)\n\nexport default class ParseStream {\n  private tokens: Array<Token>\n  private handlers: {[key: string]: eventHandler} = {}\n  private stopRequested: boolean\n  private parseToken: parseToken\n\n  constructor (tokens: Array<Token>, parseToken: parseToken) {\n    this.tokens = tokens\n    this.parseToken = parseToken\n  }\n  on (name: string, cb: eventHandler) {\n    this.handlers[name] = cb\n    return this\n  }\n  trigger (event: string, arg?: Token | ITemplate) {\n    const h = this.handlers[event]\n    if (typeof h === 'function') {\n      h(arg)\n      return true\n    }\n  }\n  start () {\n    this.trigger('start')\n    let token\n    while (!this.stopRequested && (token = this.tokens.shift())) {\n      if (this.trigger('token', token)) continue\n      if (token.type === 'tag' &&\n          this.trigger(`tag:${token.name}`, token)) {\n        continue\n      }\n      const template = this.parseToken(token, this.tokens)\n      this.trigger('template', template)\n    }\n    if (!this.stopRequested) this.trigger('end')\n    return this\n  }\n  stop () {\n    this.stopRequested = true\n    return this\n  }\n}\n","import { evalExp } from 'src/render/syntax'\nimport * as lexical from 'src/parser/lexical'\nimport assert from 'src/util/assert'\nimport Filter from './filter'\nimport Scope from 'src/scope/scope'\n\nexport default class {\n  initial: any\n  filters: Array<any>\n  constructor (str: string, strictFilters?: boolean) {\n    let match = lexical.matchValue(str)\n    assert(match, `illegal value string: ${str}`)\n\n    const initial = match[0]\n    str = str.substr(match.index + match[0].length)\n\n    const filters = []\n    while ((match = lexical.filter.exec(str))) {\n      filters.push([match[0].trim()])\n    }\n\n    this.initial = initial\n    this.filters = filters.map(str => new Filter(str, strictFilters))\n  }\n  value (scope: Scope) {\n    return this.filters.reduce(\n      (prev, filter) => filter.render(prev, scope),\n      evalExp(this.initial, scope))\n  }\n}\n","import Value from './value'\nimport { stringify } from 'src/util/underscore'\nimport Template from 'src/template/template'\nimport ITemplate from 'src/template/itemplate'\nimport Scope from 'src/scope/scope'\nimport OutputToken from 'src/parser/output-token'\n\nexport default class Output extends Template implements ITemplate {\n  value: Value\n  constructor (token: OutputToken, strictFilters?: boolean) {\n    super(token)\n    this.value = new Value(token.value, strictFilters)\n  }\n  async render (scope: Scope): Promise<string> {\n    const html = await this.value.value(scope)\n    return stringify(html)\n  }\n}\n","import Template from 'src/template/template'\nimport ITemplate from 'src/template/itemplate'\nimport Token from 'src/parser/token'\n\nexport default class extends Template implements ITemplate {\n  str: string\n  constructor (token: Token) {\n    super(token)\n    this.str = token.value\n  }\n  async render (): Promise<string> {\n    return this.str\n  }\n}\n","import { ParseError } from '../util/error'\nimport Liquid from 'src/liquid'\nimport ParseStream from './parse-stream'\nimport Token from './token'\nimport TagToken from './tag-token'\nimport OutputToken from './output-token'\nimport Tag from 'src/template/tag/tag'\nimport Output from 'src/template/output'\nimport HTML from 'src/template/html'\n\nexport default class Parser {\n  liquid: Liquid\n\n  constructor (liquid: Liquid) {\n    this.liquid = liquid\n  }\n  parse (tokens: Array<Token>) {\n    let token\n    const templates = []\n    while ((token = tokens.shift())) {\n      templates.push(this.parseToken(token, tokens))\n    }\n    return templates\n  }\n  parseToken (token: Token, remainTokens: Array<Token>) {\n    try {\n      if (token.type === 'tag') {\n        return new Tag(token as TagToken, remainTokens, this.liquid)\n      }\n      if (token.type === 'output') {\n        return new Output(token as OutputToken, this.liquid.options.strict_filters)\n      }\n      return new HTML(token)\n    } catch (e) {\n      throw new ParseError(e, token)\n    }\n  }\n  parseStream (tokens: Array<Token>) {\n    return new ParseStream(tokens, (token, tokens) => this.parseToken(token, tokens))\n  }\n}\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { AssignScope } from 'src/scope/scopes'\n\nconst re = new RegExp(`(${identifier.source})\\\\s*=([^]*)`)\n\nexport default {\n  parse: function (token) {\n    const match = token.args.match(re)\n    assert(match, `illegal token ${token.raw}`)\n    this.key = match[1]\n    this.value = match[2]\n  },\n  render: function (scope) {\n    const ctx = new AssignScope()\n    ctx[this.key] = this.liquid.evalValue(this.value, scope)\n    scope.push(ctx)\n    return Promise.resolve('')\n  }\n}\n","/*\n * Call functions in serial until someone resolved.\n * @param iterable the array to iterate with.\n * @param iteratee returns a new promise.\n * The iteratee is invoked with three arguments: (value, index, iterable).\n */\nexport function anySeries (iterable, iteratee) {\n  let ret: Promise<any> = Promise.reject(new Error('init'))\n  iterable.forEach(function (item, idx) {\n    ret = ret.catch(() => iteratee(item, idx, iterable))\n  })\n  return ret\n}\n\n/*\n * Call functions in serial until someone rejected.\n * @param {Array} iterable the array to iterate with.\n * @param {Array} iteratee returns a new promise.\n * The iteratee is invoked with three arguments: (value, index, iterable).\n */\nexport function mapSeries (iterable, iteratee) {\n  let ret: Promise<any> = Promise.resolve('init')\n  const result = []\n  iterable.forEach(function (item, idx) {\n    ret = ret\n      .then(() => iteratee(item, idx, iterable))\n      .then(x => result.push(x))\n  })\n  return ret.then(() => result)\n}\n","import { mapSeries } from 'src/util/promise'\nimport { isString, isObject, isArray } from 'src/util/underscore'\nimport { evalExp } from 'src/render/syntax'\nimport assert from 'src/util/assert'\nimport { identifier, value, hash } from 'src/parser/lexical'\nimport { RenderBreakError } from 'src/util/error'\n\nconst re = new RegExp(`^(${identifier.source})\\\\s+in\\\\s+` +\n  `(${value.source})` +\n  `(?:\\\\s+${hash.source})*` +\n  `(?:\\\\s+(reversed))?` +\n  `(?:\\\\s+${hash.source})*$`)\n\nfunction parse (tagToken, remainTokens) {\n  const match = re.exec(tagToken.args)\n  assert(match, `illegal tag: ${tagToken.raw}`)\n  this.variable = match[1]\n  this.collection = match[2]\n  this.reversed = !!match[3]\n\n  this.templates = []\n  this.elseTemplates = []\n\n  let p\n  const stream = this.liquid.parser.parseStream(remainTokens)\n    .on('start', () => (p = this.templates))\n    .on('tag:else', () => (p = this.elseTemplates))\n    .on('tag:endfor', () => stream.stop())\n    .on('template', tpl => p.push(tpl))\n    .on('end', () => {\n      throw new Error(`tag ${tagToken.raw} not closed`)\n    })\n\n  stream.start()\n}\n\nasync function render (scope, hash) {\n  let collection = evalExp(this.collection, scope)\n\n  if (!isArray(collection)) {\n    if (isString(collection) && collection.length > 0) {\n      collection = [collection]\n    } else if (isObject(collection)) {\n      collection = Object.keys(collection).map((key) => [key, collection[key]])\n    }\n  }\n  if (!isArray(collection) || !collection.length) {\n    return this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n\n  const offset = hash.offset || 0\n  const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n  collection = collection.slice(offset, offset + limit)\n  if (this.reversed) collection.reverse()\n\n  const contexts = collection.map((item, i) => {\n    const ctx = {}\n    ctx[this.variable] = item\n    ctx['forloop'] = {\n      first: i === 0,\n      index: i + 1,\n      index0: i,\n      last: i === collection.length - 1,\n      length: collection.length,\n      rindex: collection.length - i,\n      rindex0: collection.length - i - 1\n    }\n    return ctx\n  })\n\n  let html = ''\n  let finished = false\n  await mapSeries(contexts, async context => {\n    if (finished) return\n\n    scope.push(context)\n    try {\n      html += await this.liquid.renderer.renderTemplates(this.templates, scope)\n    } catch (e) {\n      if (e instanceof RenderBreakError) {\n        html += e.resolvedHTML\n        if (e.message === 'break') {\n          finished = true\n        }\n      } else throw e\n    }\n    scope.pop(context)\n  })\n  return html\n}\n\nexport default { parse, render }\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { CaptureScope } from 'src/scope/scopes'\nimport TagToken from 'src/parser/tag-token'\nimport Token from 'src/parser/token'\nimport Scope from 'src/scope/scope'\n\nconst re = new RegExp(`(${identifier.source})`)\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: Token[]) {\n    const match = tagToken.args.match(re)\n    assert(match, `${tagToken.args} not valid identifier`)\n\n    this.variable = match[1]\n    this.templates = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream.on('tag:endcapture', () => stream.stop())\n      .on('template', tpl => this.templates.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n    stream.start()\n  },\n  render: async function (scope: Scope) {\n    const html = await this.liquid.renderer.renderTemplates(this.templates, scope)\n    const ctx = new CaptureScope()\n    ctx[this.variable] = html\n    scope.push(ctx)\n  }\n}\n","import { evalExp } from 'src/render/syntax'\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    this.cond = tagToken.args\n    this.cases = []\n    this.elseTemplates = []\n\n    let p = []\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:when', token => {\n        this.cases.push({\n          val: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endcase', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function (scope) {\n    for (let i = 0; i < this.cases.length; i++) {\n      const branch = this.cases[i]\n      const val = evalExp(branch.val, scope)\n      const cond = evalExp(this.cond, scope)\n      if (val === cond) {\n        return this.liquid.renderer.renderTemplates(branch.templates, scope)\n      }\n    }\n    return this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n}\n","export default {\n  parse: function (tagToken, remainTokens) {\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', token => {\n        if (token.name === 'endcomment') stream.stop()\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n    stream.start()\n  }\n}\n","import assert from 'src/util/assert'\nimport { value, quotedLine } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\nimport BlockMode from 'src/scope/block-mode'\n\nconst staticFileRE = /[^\\s,]+/\nconst withRE = new RegExp(`with\\\\s+(${value.source})`)\n\nexport default {\n  parse: function (token) {\n    let match = staticFileRE.exec(token.args)\n    if (match) {\n      this.staticValue = match[0]\n    }\n\n    match = value.exec(token.args)\n    if (match) {\n      this.value = match[0]\n    }\n\n    match = withRE.exec(token.args)\n    if (match) {\n      this.with = match[1]\n    }\n  },\n  render: async function (scope, hash) {\n    let filepath\n    if (scope.opts.dynamicPartials) {\n      if (quotedLine.exec(this.value)) {\n        const template = this.value.slice(1, -1)\n        filepath = await this.liquid.parseAndRender(template, scope.getAll(), scope.opts)\n      } else {\n        filepath = evalValue(this.value, scope)\n      }\n    } else {\n      filepath = this.staticValue\n    }\n    assert(filepath, `cannot include with empty filename`)\n\n    const originBlocks = scope.blocks\n    const originBlockMode = scope.blockMode\n\n    scope.blocks = {}\n    scope.blockMode = BlockMode.OUTPUT\n    if (this.with) {\n      hash[filepath] = evalValue(this.with, scope)\n    }\n    const templates = await this.liquid.getTemplate(filepath, scope.opts)\n    scope.push(hash)\n    const html = await this.liquid.renderer.renderTemplates(templates, scope)\n    scope.pop(hash)\n    scope.blocks = originBlocks\n    scope.blockMode = originBlockMode\n    return html\n  }\n}\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { CaptureScope, AssignScope, DecrementScope } from 'src/scope/scopes'\nimport TagToken from 'src/parser/tag-token'\nimport Scope from 'src/scope/scope'\n\nexport default {\n  parse: function (token: TagToken) {\n    const match = token.args.match(identifier)\n    assert(match, `illegal identifier ${token.args}`)\n    this.variable = match[0]\n  },\n  render: function (scope: Scope) {\n    let context = scope.findContextFor(\n      this.variable,\n      ctx => {\n        return !(ctx instanceof CaptureScope) && !(ctx instanceof AssignScope)\n      }\n    )\n    if (!context) {\n      context = new DecrementScope()\n      scope.unshift(context)\n    }\n    if (typeof context[this.variable] !== 'number') {\n      context[this.variable] = 0\n    }\n    return --context[this.variable]\n  }\n}\n","import assert from 'src/util/assert'\nimport { value as rValue } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\n\nconst groupRE = new RegExp(`^(?:(${rValue.source})\\\\s*:\\\\s*)?(.*)$`)\nconst candidatesRE = new RegExp(rValue.source, 'g')\n\nexport default {\n  parse: function (tagToken) {\n    let match = groupRE.exec(tagToken.args)\n    assert(match, `illegal tag: ${tagToken.raw}`)\n\n    this.group = match[1] || ''\n    const candidates = match[2]\n\n    this.candidates = []\n\n    while ((match = candidatesRE.exec(candidates))) {\n      this.candidates.push(match[0])\n    }\n    assert(this.candidates.length, `empty candidates: ${tagToken.raw}`)\n  },\n\n  render: function (scope) {\n    const group = evalValue(this.group, scope)\n    const fingerprint = `cycle:${group}:` + this.candidates.join(',')\n\n    const groups = scope.opts.groups = scope.opts.groups || {}\n    let idx = groups[fingerprint]\n\n    if (idx === undefined) {\n      idx = groups[fingerprint] = 0\n    }\n\n    const candidate = this.candidates[idx]\n    idx = (idx + 1) % this.candidates.length\n    groups[fingerprint] = idx\n\n    return evalValue(candidate, scope)\n  }\n}\n","import { evalExp, isTruthy } from 'src/render/syntax'\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    this.branches = []\n    this.elseTemplates = []\n\n    let p\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => this.branches.push({\n        cond: tagToken.args,\n        templates: (p = [])\n      }))\n      .on('tag:elsif', token => {\n        this.branches.push({\n          cond: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endif', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function (scope) {\n    for (const branch of this.branches) {\n      const cond = evalExp(branch.cond, scope)\n      if (isTruthy(cond)) {\n        return this.liquid.renderer.renderTemplates(branch.templates, scope)\n      }\n    }\n    return this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n}\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { CaptureScope, AssignScope, IncrementScope } from 'src/scope/scopes'\n\nexport default {\n  parse: function (token) {\n    const match = token.args.match(identifier)\n    assert(match, `illegal identifier ${token.args}`)\n    this.variable = match[0]\n  },\n  render: function (scope) {\n    let context = scope.findContextFor(\n      this.variable,\n      ctx => {\n        return !(ctx instanceof CaptureScope) && !(ctx instanceof AssignScope)\n      }\n    )\n    if (!context) {\n      context = new IncrementScope()\n      scope.unshift(context)\n    }\n    if (typeof context[this.variable] !== 'number') {\n      context[this.variable] = 0\n    }\n    const val = context[this.variable]\n    context[this.variable]++\n    return val\n  }\n}\n","import assert from 'src/util/assert'\nimport { value as rValue } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\nimport BlockMode from 'src/scope/block-mode'\n\nconst staticFileRE = /\\S+/\n\nexport default {\n  parse: function (token, remainTokens) {\n    let match = staticFileRE.exec(token.args)\n    if (match) {\n      this.staticLayout = match[0]\n    }\n\n    match = rValue.exec(token.args)\n    if (match) {\n      this.layout = match[0]\n    }\n\n    this.tpls = this.liquid.parser.parse(remainTokens)\n  },\n  render: async function (scope, hash) {\n    const layout = scope.opts.dynamicPartials\n      ? evalValue(this.layout, scope)\n      : this.staticLayout\n    assert(layout, `cannot apply layout with empty filename`)\n\n    // render the remaining tokens immediately\n    scope.blockMode = BlockMode.STORE\n    const html = await this.liquid.renderer.renderTemplates(this.tpls, scope)\n    if (scope.blocks[''] === undefined) {\n      scope.blocks[''] = html\n    }\n    const templates = await this.liquid.getTemplate(layout, scope.opts)\n    scope.push(hash)\n    scope.blockMode = BlockMode.OUTPUT\n    const partial = await this.liquid.renderer.renderTemplates(templates, scope)\n    scope.pop(hash)\n    return partial\n  }\n}\n","import BlockMode from 'src/scope/block-mode'\n\nexport default {\n  parse: function (token, remainTokens) {\n    const match = /\\w+/.exec(token.args)\n    this.block = match ? match[0] : ''\n\n    this.tpls = []\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:endblock', () => stream.stop())\n      .on('template', tpl => this.tpls.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.raw} not closed`)\n      })\n    stream.start()\n  },\n  render: async function (scope) {\n    const childDefined = scope.blocks[this.block]\n    const html = childDefined !== undefined\n      ? childDefined\n      : await this.liquid.renderer.renderTemplates(this.tpls, scope)\n\n    if (scope.blockMode === BlockMode.STORE) {\n      scope.blocks[this.block] = html\n      return ''\n    }\n    return html\n  }\n}\n","export default {\n  parse: function (tagToken, remainTokens) {\n    this.tokens = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', token => {\n        if (token.name === 'endraw') stream.stop()\n        else this.tokens.push(token)\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n    stream.start()\n  },\n  render: function () {\n    return this.tokens.map(token => token.raw).join('')\n  }\n}\n","import { mapSeries } from 'src/util/promise'\nimport assert from 'src/util/assert'\nimport { evalExp } from 'src/render/syntax'\nimport { identifier, value, hash } from 'src/parser/lexical'\n\nconst re = new RegExp(`^(${identifier.source})\\\\s+in\\\\s+` +\n  `(${value.source})` +\n  `(?:\\\\s+${hash.source})*$`)\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    const match = re.exec(tagToken.args)\n    assert(match, `illegal tag: ${tagToken.raw}`)\n\n    this.variable = match[1]\n    this.collection = match[2]\n    this.templates = []\n\n    let p\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:endtablerow', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: async function (scope, hash) {\n    let collection = evalExp(this.collection, scope) || []\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    const cols = hash.cols || collection.length\n    const contexts = collection.map(item => {\n      const ctx = {}\n      ctx[this.variable] = item\n      return ctx\n    })\n\n    let row\n    let html = ''\n    await mapSeries(contexts, async (context, idx) => {\n      row = Math.floor(idx / cols) + 1\n      const col = (idx % cols) + 1\n      if (col === 1) {\n        if (row !== 1) {\n          html += '</tr>'\n        }\n        html += `<tr class=\"row${row}\">`\n      }\n\n      html += `<td class=\"col${col}\">`\n      scope.push(context)\n      html += await this.liquid.renderer.renderTemplates(this.templates, scope)\n      html += '</td>'\n      scope.pop(context)\n      return html\n    })\n    if (row > 0) {\n      html += '</tr>'\n    }\n    return html\n  }\n}\n","import assign from './assign'\nimport For from './for'\nimport capture from './capture'\nimport Case from './case'\nimport comment from './comment'\nimport include from './include'\nimport decrement from './decrement'\nimport cycle from './cycle'\nimport If from './if'\nimport increment from './increment'\nimport layout from './layout'\nimport block from './block'\nimport raw from './raw'\nimport tablerow from './tablerow'\nimport unless from './unless'\nimport Break from './break'\nimport Continue from './continue'\nimport ITagImplOptions from 'src/template/tag/itag-impl-options'\n\nconst tags: { [key: string]: ITagImplOptions } = {\n  assign, 'for': For, capture, 'case': Case, comment, include, decrement, increment, cycle, 'if': If, layout, block, raw, tablerow, unless, 'break': Break, 'continue': Continue\n}\n\nexport default tags\n","import { evalExp, isFalsy } from 'src/render/syntax'\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    this.templates = []\n    this.elseTemplates = []\n    let p\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => {\n        p = this.templates\n        this.cond = tagToken.args\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endunless', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function (scope) {\n    const cond = evalExp(this.cond, scope)\n    return isFalsy(cond)\n      ? this.liquid.renderer.renderTemplates(this.templates, scope)\n      : this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n}\n","import { RenderBreakError } from 'src/util/error'\n\nexport default {\n  render: async function () {\n    throw new RenderBreakError('break')\n  }\n}\n","import { RenderBreakError } from 'src/util/error'\n\nexport default {\n  render: async function () {\n    throw new RenderBreakError('continue')\n  }\n}\n","const escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n}\nconst unescapeMap = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&#34;': '\"',\n  '&#39;': \"'\"\n}\n\nfunction escape (str) {\n  return String(str).replace(/&|<|>|\"|'/g, m => escapeMap[m])\n}\n\nfunction unescape (str) {\n  return String(str).replace(/&(amp|lt|gt|#34|#39);/g, m => unescapeMap[m])\n}\n\nexport default {\n  'escape': escape,\n  'escape_once': str => escape(unescape(str)),\n  'newline_to_br': v => v.replace(/\\n/g, '<br />'),\n  'strip_html': v => String(v).replace(/<script.*?<\\/script>|<!--.*?-->|<style.*?<\\/style>|<.*?>/g, '')\n}\n","export default {\n  'append': (v, arg) => v + arg,\n  'prepend': (v, arg) => arg + v,\n  'capitalize': str => String(str).charAt(0).toUpperCase() + str.slice(1),\n  'concat': (v, arg) => Array.prototype.concat.call(v, arg),\n  'lstrip': v => String(v).replace(/^\\s+/, ''),\n  'downcase': v => v.toLowerCase(),\n  'upcase': str => String(str).toUpperCase(),\n  'remove': (v, arg) => v.split(arg).join(''),\n  'remove_first': (v, l) => v.replace(l, ''),\n  'replace': (v, pattern, replacement) =>\n    String(v).split(pattern).join(replacement),\n  'replace_first': (v, arg1, arg2) => String(v).replace(arg1, arg2),\n  'rstrip': str => String(str).replace(/\\s+$/, ''),\n  'split': (v, arg) => String(v).split(arg),\n  'strip': (v) => String(v).trim(),\n  'strip_newlines': v => String(v).replace(/\\n/g, ''),\n  'truncate': (v, l, o) => {\n    v = String(v)\n    o = (o === undefined) ? '...' : o\n    l = l || 16\n    if (v.length <= l) return v\n    return v.substr(0, l - o.length) + o\n  },\n  'truncatewords': (v, l, o) => {\n    if (o === undefined) o = '...'\n    const arr = v.split(' ')\n    let ret = arr.slice(0, l).join(' ')\n    if (arr.length > l) ret += o\n    return ret\n  }\n}\n","export default {\n  'abs': v => Math.abs(v),\n  'ceil': v => Math.ceil(v),\n  'divided_by': (v, arg) => v / arg,\n  'floor': v => Math.floor(v),\n  'minus': bindFixed((v, arg) => v - arg),\n  'modulo': bindFixed((v, arg) => v % arg),\n  'round': (v, arg) => {\n    const amp = Math.pow(10, arg || 0)\n    return Math.round(v * amp) / amp\n  },\n  'plus': bindFixed((v, arg) => Number(v) + Number(arg)),\n  'times': (v, arg) => v * arg\n}\n\nfunction getFixed (v) {\n  const p = String(v).split('.')\n  return (p.length > 1) ? p[1].length : 0\n}\n\nfunction bindFixed (cb) {\n  return (l, r) => {\n    const f = Math.max(getFixed(l), getFixed(r))\n    return cb(l, r).toFixed(f)\n  }\n}\n","export default {\n  'url_decode': x => x.split('+').map(decodeURIComponent).join(' '),\n  'url_encode': x => x.split(' ').map(encodeURIComponent).join('+')\n}\n","import { last } from 'src/util/underscore'\n\nexport default {\n  'join': (v, arg) => v.join(arg === undefined ? ' ' : arg),\n  'last': v => last(v),\n  'first': v => v[0],\n  'map': (arr, arg) => arr.map(v => v[arg]),\n  'reverse': v => v.reverse(),\n  'sort': (v, arg) => v.sort(arg),\n  'size': v => v.length,\n  'slice': (v, begin, length) => {\n    if (length === undefined) length = 1\n    return v.slice(begin, begin + length)\n  },\n  'uniq': function (arr) {\n    const u = {}\n    return (arr || []).filter(val => {\n      if (u.hasOwnProperty(val)) {\n        return false\n      }\n      u[val] = true\n      return true\n    })\n  }\n}\n","import { padStart } from './underscore'\n\nconst monthNames = [\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n  'September', 'October', 'November', 'December'\n]\nconst dayNames = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n]\nconst monthNamesShort = monthNames.map(abbr)\nconst dayNamesShort = dayNames.map(abbr)\nconst suffixes = {\n  1: 'st',\n  2: 'nd',\n  3: 'rd',\n  'default': 'th'\n}\n\nfunction abbr (str) {\n  return str.slice(0, 3)\n}\n\n// prototype extensions\nconst _date = {\n  daysInMonth: function (d) {\n    const feb = _date.isLeapYear(d) ? 29 : 28\n    return [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n  },\n\n  getDayOfYear: function (d) {\n    let num = 0\n    for (let i = 0; i < d.getMonth(); ++i) {\n      num += _date.daysInMonth(d)[i]\n    }\n    return num + d.getDate()\n  },\n\n  getWeekOfYear: function (d, startDay) {\n    // Skip to startDay of this week\n    const now = this.getDayOfYear(d) + (startDay - d.getDay())\n    // Find the first startDay of the year\n    const jan1 = new Date(d.getFullYear(), 0, 1)\n    const then = (7 - jan1.getDay() + startDay)\n    return padStart(String(Math.floor((now - then) / 7) + 1), 2, '0')\n  },\n\n  isLeapYear: function (d) {\n    const year = d.getFullYear()\n    return !!((year & 3) === 0 && (year % 100 || (year % 400 === 0 && year)))\n  },\n\n  getSuffix: function (d) {\n    const str = d.getDate().toString()\n    const index = parseInt(str.slice(-1))\n    return suffixes[index] || suffixes['default']\n  },\n\n  century: function (d) {\n    return parseInt(d.getFullYear().toString().substring(0, 2), 10)\n  }\n}\n\nconst formatCodes = {\n  a: function (d) {\n    return dayNamesShort[d.getDay()]\n  },\n  A: function (d) {\n    return dayNames[d.getDay()]\n  },\n  b: function (d) {\n    return monthNamesShort[d.getMonth()]\n  },\n  B: function (d) {\n    return monthNames[d.getMonth()]\n  },\n  c: function (d) {\n    return d.toLocaleString()\n  },\n  C: function (d) {\n    return _date.century(d)\n  },\n  d: function (d) {\n    return padStart(d.getDate(), 2, '0')\n  },\n  e: function (d) {\n    return padStart(d.getDate(), 2)\n  },\n  H: function (d) {\n    return padStart(d.getHours(), 2, '0')\n  },\n  I: function (d) {\n    return padStart(String(d.getHours() % 12 || 12), 2, '0')\n  },\n  j: function (d) {\n    return padStart(_date.getDayOfYear(d), 3, '0')\n  },\n  k: function (d) {\n    return padStart(d.getHours(), 2)\n  },\n  l: function (d) {\n    return padStart(String(d.getHours() % 12 || 12), 2)\n  },\n  L: function (d) {\n    return padStart(d.getMilliseconds(), 3, '0')\n  },\n  m: function (d) {\n    return padStart(d.getMonth() + 1, 2, '0')\n  },\n  M: function (d) {\n    return padStart(d.getMinutes(), 2, '0')\n  },\n  p: function (d) {\n    return (d.getHours() < 12 ? 'AM' : 'PM')\n  },\n  P: function (d) {\n    return (d.getHours() < 12 ? 'am' : 'pm')\n  },\n  q: function (d) {\n    return _date.getSuffix(d)\n  },\n  s: function (d) {\n    return Math.round(d.valueOf() / 1000)\n  },\n  S: function (d) {\n    return padStart(d.getSeconds(), 2, '0')\n  },\n  u: function (d) {\n    return d.getDay() || 7\n  },\n  U: function (d) {\n    return _date.getWeekOfYear(d, 0)\n  },\n  w: function (d) {\n    return d.getDay()\n  },\n  W: function (d) {\n    return _date.getWeekOfYear(d, 1)\n  },\n  x: function (d) {\n    return d.toLocaleDateString()\n  },\n  X: function (d) {\n    return d.toLocaleTimeString()\n  },\n  y: function (d) {\n    return d.getFullYear().toString().substring(2, 4)\n  },\n  Y: function (d) {\n    return d.getFullYear()\n  },\n  z: function (d) {\n    const tz = d.getTimezoneOffset() / 60 * 100\n    return (tz > 0 ? '-' : '+') + padStart(String(Math.abs(tz)), 4, '0')\n  },\n  '%': function () {\n    return '%'\n  }\n};\n(formatCodes as any).h = formatCodes.b;\n(formatCodes as any).N = formatCodes.L\n\nexport default function (d, format) {\n  let output = ''\n  let remaining = format\n\n  while (true) {\n    const r = /%./g\n    const results = r.exec(remaining)\n\n    // No more format codes. Add the remaining text and return\n    if (!results) {\n      return output + remaining\n    }\n\n    // Add the preceding text\n    output += remaining.slice(0, r.lastIndex - 2)\n    remaining = remaining.slice(r.lastIndex)\n\n    // Add the format code\n    const ch = results[0].charAt(1)\n    const func = formatCodes[ch]\n    output += func ? func.call(this, d) : '%' + ch\n  }\n}\n","import html from './html'\nimport str from './string'\nimport math from './math'\nimport url from './url'\nimport array from './array'\nimport date from './date'\nimport obj from './object'\n\nexport default { ...html, ...str, ...math, ...url, ...date, ...obj, ...array }\n","import strftime from 'src/util/strftime'\nimport { isString } from 'src/util/underscore'\n\nexport default {\n  'date': (v, arg) => {\n    let date = v\n    if (v === 'now') {\n      date = new Date()\n    } else if (isString(v)) {\n      date = new Date(v)\n    }\n    return isValidDate(date) ? strftime(date, arg) : v\n  }\n}\n\nfunction isValidDate (date) {\n  return date instanceof Date && !isNaN(date.getTime())\n}\n","import { isTruthy } from 'src/render/syntax'\n\nexport default {\n  'default': (v, arg) => isTruthy(v) ? v : arg\n}\n","import Scope from './scope/scope'\nimport * as Types from './types'\nimport fs from 'src/fs'\nimport * as _ from './util/underscore'\nimport ITemplate from './template/itemplate'\nimport Tokenizer from './parser/tokenizer'\nimport Render from './render/render'\nimport Tag from './template/tag/tag'\nimport Filter from './template/filter'\nimport Parser from './parser/parser'\nimport ITagImplOptions from './template/tag/itag-impl-options'\nimport Value from './template/value'\nimport { isTruthy, isFalsy, evalExp, evalValue } from './render/syntax'\nimport builtinTags from './builtin/tags'\nimport builtinFilters from './builtin/filters'\nimport { LiquidOptions, NormalizedOptions, defaultOptions, normalize } from './liquid-options'\n\nexport default class Liquid {\n  public options: NormalizedOptions\n  private cache: object\n  private parser: Parser\n  private renderer: Render\n  private tokenizer: Tokenizer\n\n  constructor (opts: LiquidOptions = {}) {\n    const options = { ...defaultOptions, ...normalize(opts) }\n    if (options.cache) {\n      this.cache = {}\n    }\n    this.options = options\n    this.parser = new Parser(this)\n    this.renderer = new Render()\n    this.tokenizer = new Tokenizer(this.options)\n\n    _.forOwn(builtinTags, (conf, name) => this.registerTag(name, conf))\n    _.forOwn(builtinFilters, (handler, name) => this.registerFilter(name, handler))\n  }\n  parse (html: string, filepath?: string) {\n    const tokens = this.tokenizer.tokenize(html, filepath)\n    return this.parser.parse(tokens)\n  }\n  render (tpl: Array<ITemplate>, ctx?: object, opts?: LiquidOptions) {\n    const options = { ...this.options, ...normalize(opts) }\n    const scope = new Scope(ctx, options)\n    return this.renderer.renderTemplates(tpl, scope)\n  }\n  async parseAndRender (html: string, ctx?: object, opts?: LiquidOptions) {\n    const tpl = await this.parse(html)\n    return this.render(tpl, ctx, opts)\n  }\n  async getTemplate (file, opts?: LiquidOptions) {\n    const options = normalize(opts)\n    const roots = options.root ? [...options.root, ...this.options.root] : this.options.root\n    const paths = roots.map(root => fs.resolve(root, file, this.options.extname))\n\n    for (const filepath of paths) {\n      if (!(await fs.exists(filepath))) continue\n\n      if (this.options.cache && this.cache[filepath]) return this.cache[filepath]\n      const value = this.parse(await fs.readFile(filepath), filepath)\n      if (this.options.cache) this.cache[filepath] = value\n      return value\n    }\n\n    const err = new Error('ENOENT') as any\n    err.message = `ENOENT: Failed to lookup \"${file}\" in \"${roots}\"`\n    err.code = 'ENOENT'\n    throw err\n  }\n  async renderFile (file, ctx?: object, opts?: LiquidOptions) {\n    const options = normalize(opts)\n    const templates = await this.getTemplate(file, options)\n    return this.render(templates, ctx, opts)\n  }\n  evalValue (str: string, scope: Scope) {\n    return new Value(str, this.options.strict_filters).value(scope)\n  }\n  registerFilter (name, filter) {\n    return Filter.register(name, filter)\n  }\n  registerTag (name: string, tag: ITagImplOptions) {\n    return Tag.register(name, tag)\n  }\n  plugin (plugin) {\n    return plugin.call(this, Liquid)\n  }\n  express () {\n    const self = this\n    return function (filePath: string, ctx: object, cb: (err: Error, html?: string) => void) {\n      const opts = { root: this.root }\n      self.renderFile(filePath, ctx, opts).then(html => cb(null, html), cb)\n    }\n  }\n  static default = Liquid\n  static isTruthy = isTruthy\n  static isFalsy = isFalsy\n  static evalExp = evalExp\n  static evalValue = evalValue\n  static Types = Types\n}\n"],"names":["toStr","Object","prototype","toString","arrToStr","Array","isString","value","call","isFunction","stringify","isNil","to_liquid","toLiquid","to_s","indexOf","cache","JSON","key","isObject","push","create","proto","isArray","forOwn","object","iteratee","k","hasOwnProperty","last","arr","length","type","padStart","str","ch","n","String","quoted","RegExp","source","quoteBalanced","number","bool","identifier","subscript","literal","variable","rangeLimit","range","rangeCapture","hash","hashCapture","tagLine","literalLine","variableLine","numberLine","boolLine","quotedLine","rangeLine","integerLine","valueDeclaration","valueList","filter","filterCapture","filterLine","operators","captureStack","Error","captureStackTrace","this","constructor","err","token","input","line","file","originalError","LiquidError","obj","name","targetLine","lines","begin","end","context","split","Math","max","min","start","stop","step","arguments","i","_\r\n        .range","map","lineNumber","indicator","num","_.padStart","text","join","message","msg","mkMessage","stack","_super","_this","tslib_1.__extends","TokenizationError","_.create","ParseError","tpl","RenderError","RenderBreakError","predicate","AssertionError","BlockMode","defaultOptions","root","extname","dynamicPartials","trim_tag_right","trim_tag_left","trim_value_right","trim_value_left","greedy","strict_filters","strict_variables","normalize","options","_.isArray","_.isString","ctx","opts","OUTPUT","contexts","Scope","reduce","val","_i","srcs","forEach","src","target","binaryAssign","_.assign","path","paths","propertyAccessSeq","scope","findContextFor","_.last","readProperty","v","some","_.isObject","undefined","unshift","pop","findIndex","TypeError","splice","candidate","_.isNil","_.isFunction","size","liquid_method_missing","j","seq","delemiter","test","assert","slice","matchRightBracket","get","readFile","url","Promise","resolve","reject","xhr","XMLHttpRequest","onload","status","responseText","statusText","onerror","open","send","filepath","ext","base","document","createElement","href","head","getElementsByTagName","insertBefore","firstChild","a","resolved","removeChild","domResolve","replace","origin","exists","ParseState","raw","pos","Token","trimLeft","trimRight","trim","match","lexical.tagLine","args","DelimitedToken","Tokenizer","tokens","p","state","HTML","buffer","bufferBegin","bin","substr","HTMLToken","TAG","OutputToken","TagToken","inRaw","rLeft","rRight","whiteSpaceCtrl","Render","templates","html","templates_1","_a","render","_b","e_1","resolvedHTML","==","l","r","!=",">","<",">=","<=","contains","and","isTruthy","or","evalExp","exp","operatorREs","lexical.operators","operatorRE","expRE","lexical.quoteBalanced","op","lexical.rangeLine","low","evalValue","high","res","Number","toLowerCase","lexical.parseLiteral","isFalsy","markup","lastIndex","exec","liquid","impl","Tag","impls","parse","Hash","tag","Template","valueRE","lexical.value","strictFilters","lexical.filterLine","argList","Filter","x","parseArgs","keyMatch","index","arg","apply","parseToken","ParseStream","cb","handlers","event","h","trigger","stopRequested","shift","template","initial","filters","lexical.filter","default_1","prev","Value","Output","Parser","remainTokens","e","re","AssignScope","mapSeries","iterable","ret","result","item","idx","then","tagToken","collection","reversed","elseTemplates","stream","parser","parseStream","on","keys","offset","limit","reverse","first","index0","rindex","rindex0","finished","renderer","renderTemplates","CaptureScope","cond","cases","branch","staticFileRE","withRE","staticValue","with","parseAndRender","getAll","originBlocks","blocks","originBlockMode","blockMode","getTemplate","DecrementScope","groupRE","rValue","candidatesRE","group","candidates","fingerprint","groups","branches","IncrementScope","staticLayout","layout","tpls","STORE","partial","block","childDefined","tags","assign","for","For","capture","case","Case","comment","include","decrement","increment","cycle","if","If","tablerow","cols","row","floor","col","unless","break","continue","escapeMap","&","\"","'","unescapeMap","&amp;","&lt;","&gt;","&#34;","&#39;","escape","m","escape_once","newline_to_br","strip_html","append","prepend","capitalize","charAt","toUpperCase","concat","lstrip","downcase","upcase","remove","remove_first","pattern","replacement","replace_first","arg1","arg2","rstrip","strip","strip_newlines","truncate","o","truncatewords","abs","ceil","divided_by","minus","bindFixed","modulo","round","amp","pow","plus","times","getFixed","f","toFixed","url_decode","decodeURIComponent","url_encode","encodeURIComponent","sort","uniq","u","monthNames","dayNames","monthNamesShort","abbr","dayNamesShort","suffixes","1","2","3","default","_date","daysInMonth","d","isLeapYear","getDayOfYear","getMonth","getDate","getWeekOfYear","startDay","now","getDay","Date","getFullYear","year","getSuffix","parseInt","century","substring","formatCodes","A","b","B","c","toLocaleString","C","H","getHours","I","L","getMilliseconds","M","getMinutes","P","q","s","valueOf","S","getSeconds","U","w","W","toLocaleDateString","X","toLocaleTimeString","y","Y","z","tz","getTimezoneOffset","%","N","math","date","isNaN","getTime","format","output","remaining","results","func","strftime","array","tokenizer","_.forOwn","builtinTags","conf","registerTag","builtinFilters","handler","registerFilter","Liquid","tokenize","roots","fs","paths_1","code","register","plugin","self","filePath","renderFile","Types"],"mappings":"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"}