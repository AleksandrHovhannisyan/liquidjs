{"version":3,"file":"liquid.min.js","sources":["../src/util/underscore.ts","../src/parser/lexical.ts","../src/util/error.ts","../src/util/assert.ts","../src/liquid-options.ts","../src/scope/block-mode.ts","../src/scope/scope.ts","../src/scope/scopes.ts","../src/fs/browser.ts","../src/parser/token.ts","../src/parser/tokenizer.ts","../src/parser/html-token.ts","../src/parser/delimited-token.ts","../src/parser/tag-token.ts","../src/parser/output-token.ts","../src/parser/whitespace-ctrl.ts","../src/render/render.ts","../src/render/syntax.ts","../src/template/tag/hash.ts","../src/template/template.ts","../src/template/tag/tag.ts","../src/template/filter.ts","../src/parser/parse-stream.ts","../src/template/value.ts","../src/template/output.ts","../src/template/html.ts","../src/parser/parser.ts","../src/builtin/tags/assign.ts","../src/util/promise.ts","../src/builtin/tags/for.ts","../src/builtin/tags/capture.ts","../src/builtin/tags/case.ts","../src/builtin/tags/comment.ts","../src/builtin/tags/include.ts","../src/builtin/tags/decrement.ts","../src/builtin/tags/cycle.ts","../src/builtin/tags/if.ts","../src/builtin/tags/increment.ts","../src/builtin/tags/layout.ts","../src/builtin/tags/block.ts","../src/builtin/tags/raw.ts","../src/builtin/tags/tablerow.ts","../src/builtin/tags/index.ts","../src/builtin/tags/unless.ts","../src/builtin/tags/break.ts","../src/builtin/tags/continue.ts","../src/builtin/filters/html.ts","../src/builtin/filters/string.ts","../src/builtin/filters/math.ts","../src/builtin/filters/url.ts","../src/builtin/filters/array.ts","../src/util/strftime.ts","../src/builtin/filters/index.ts","../src/builtin/filters/date.ts","../src/builtin/filters/object.ts","../src/liquid.ts"],"sourcesContent":["const toStr = Object.prototype.toString\nconst arrToStr = Array.prototype.toString\n\n/*\n * Checks if value is classified as a String primitive or object.\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is a string, else false.\n */\nexport function isString (value: any) {\n  return toStr.call(value) === '[object String]'\n}\n\nexport function isFunction (value: any) {\n  return typeof value === 'function'\n}\n\nexport function promisify (fn) {\n  return function (...args) {\n    return new Promise((resolve, reject) => {\n      fn(...args, (err, result) => {\n        err ? reject(err) : resolve(result)\n      })\n    })\n  }\n}\n\nexport function stringify (value: any): string {\n  if (isNil(value)) return ''\n  if (isFunction(value.to_liquid)) return stringify(value.to_liquid())\n  if (isFunction(value.toLiquid)) return stringify(value.toLiquid())\n  if (isFunction(value.to_s)) return value.to_s()\n  if ([toStr, arrToStr].indexOf(value.toString) > -1) return defaultToString(value)\n  if (isFunction(value.toString)) return value.toString()\n  return toStr.call(value)\n}\n\nfunction defaultToString (value: any): string {\n  const cache = []\n  return JSON.stringify(value, (key, value) => {\n    if (isObject(value)) {\n      if (cache.indexOf(value) !== -1) {\n        return\n      }\n      cache.push(value)\n    }\n    return value\n  })\n}\n\nexport function create<T1 extends object, T2 extends T1 = T1> (proto: T1): T2 {\n  return Object.create(proto)\n}\n\nexport function isNil (value: any): boolean {\n  return value === null || value === undefined\n}\n\nexport function isArray (value: any): boolean {\n  // be compatible with IE 8\n  return toStr.call(value) === '[object Array]'\n}\n\nexport function isError (value: any): boolean {\n  const signature = toStr.call(value)\n  // [object XXXError]\n  return signature.substr(-6, 5) === 'Error' ||\n        (typeof value.message === 'string' && typeof value.name === 'string')\n}\n\n/*\n * Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property.\n * The iteratee is invoked with three arguments: (value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning false.\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @return {Object} Returns object.\n */\nexport function forOwn (object, iteratee: ((val: any, key: string, obj: object) => boolean | void)) {\n  object = object || {}\n  for (const k in object) {\n    if (object.hasOwnProperty(k)) {\n      if (iteratee(object[k], k, object) === false) break\n    }\n  }\n  return object\n}\n\n/*\n * Assigns own enumerable string keyed properties of source objects to the destination object.\n * Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * Note: This method mutates object and is loosely based on Object.assign.\n *\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @return {Object} Returns object.\n */\nexport function assign (obj: object, ...srcs: object[]): object {\n  obj = isObject(obj) ? obj : {}\n  srcs.forEach(src => binaryAssign(obj, src))\n  return obj\n}\n\nfunction binaryAssign (target: object, src: object): object {\n  for (const key in src) if (src.hasOwnProperty(key)) target[key] = src[key]\n  return target\n}\n\nexport function last (arr: any[]): any {\n  return arr[arr.length - 1]\n}\n\nexport function uniq (arr: any[]): any[] {\n  const u = {}\n  const a = []\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    if (u.hasOwnProperty(arr[i])) {\n      continue\n    }\n    a.push(arr[i])\n    u[arr[i]] = 1\n  }\n  return a\n}\n\n/*\n * Checks if value is the language type of Object.\n * (e.g. arrays, functions, objects, regexes, new Number(0), and new String(''))\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is an object, else false.\n */\nexport function isObject (value: any): boolean {\n  const type = typeof value\n  return value !== null && (type === 'object' || type === 'function')\n}\n\n/*\n * A function to create flexibly-numbered lists of integers,\n * handy for each and map loops. start, if omitted, defaults to 0; step defaults to 1.\n * Returns a list of integers from start (inclusive) to stop (exclusive),\n * incremented (or decremented) by step, exclusive.\n * Note that ranges that stop before they start are considered to be zero-length instead of\n * negative â€” if you'd like a negative range, use a negative step.\n */\nexport function range (start: number, stop?: number, step?: number) {\n  if (arguments.length === 1) {\n    stop = start\n    start = 0\n  }\n  step = step || 1\n\n  const arr = []\n  for (let i = start; i < stop; i += step) {\n    arr.push(i)\n  }\n  return arr\n}\n\nexport function padStart (str: any, length: number, ch: string = ' ') {\n  str = String(str)\n  let n = length - str.length\n  while (n-- > 0) str = ch + str\n  return str\n}\n","// quote related\nconst singleQuoted = /'[^']*'/\nconst doubleQuoted = /\"[^\"]*\"/\nexport const quoted = new RegExp(`${singleQuoted.source}|${doubleQuoted.source}`)\nexport const quoteBalanced = new RegExp(`(?:${quoted.source}|[^'\"])*`)\n\n// basic types\nexport const integer = /-?\\d+/\nexport const number = /-?\\d+\\.?\\d*|\\.?\\d+/\nexport const bool = /true|false/\n\n// property access\nexport const identifier = /[\\w-]+[?]?/\nexport const subscript = new RegExp(`\\\\[(?:${quoted.source}|[\\\\w-\\\\.]+)\\\\]`)\nexport const literal = new RegExp(`(?:${quoted.source}|${bool.source}|${number.source})`)\nexport const variable = new RegExp(`${identifier.source}(?:\\\\.${identifier.source}|${subscript.source})*`)\n\n// range related\nexport const rangeLimit = new RegExp(`(?:${variable.source}|${number.source})`)\nexport const range = new RegExp(`\\\\(${rangeLimit.source}\\\\.\\\\.${rangeLimit.source}\\\\)`)\nexport const rangeCapture = new RegExp(`\\\\((${rangeLimit.source})\\\\.\\\\.(${rangeLimit.source})\\\\)`)\n\nexport const value = new RegExp(`(?:${variable.source}|${literal.source}|${range.source})`)\n\n// hash related\nexport const hash = new RegExp(`(?:${identifier.source})\\\\s*:\\\\s*(?:${value.source})`)\nexport const hashCapture = new RegExp(`(${identifier.source})\\\\s*:\\\\s*(${value.source})`, 'g')\n\n// full match\nexport const tagLine = new RegExp(`^\\\\s*(${identifier.source})\\\\s*([\\\\s\\\\S]*?)\\\\s*$`)\nexport const literalLine = new RegExp(`^${literal.source}$`, 'i')\nexport const variableLine = new RegExp(`^${variable.source}$`)\nexport const numberLine = new RegExp(`^${number.source}$`)\nexport const boolLine = new RegExp(`^${bool.source}$`, 'i')\nexport const quotedLine = new RegExp(`^${quoted.source}$`)\nexport const rangeLine = new RegExp(`^${rangeCapture.source}$`)\nexport const integerLine = new RegExp(`^${integer.source}$`)\n\n// filter related\nexport const valueDeclaration = new RegExp(`(?:${identifier.source}\\\\s*:\\\\s*)?${value.source}`)\nexport const valueList = new RegExp(`${valueDeclaration.source}(\\\\s*,\\\\s*${valueDeclaration.source})*`)\nexport const filter = new RegExp(`${identifier.source}(?:\\\\s*:\\\\s*${valueList.source})?`, 'g')\nexport const filterCapture = new RegExp(`(${identifier.source})(?:\\\\s*:\\\\s*(${valueList.source}))?`)\nexport const filterLine = new RegExp(`^${filterCapture.source}$`)\n\nexport const operators = [\n  /\\s+or\\s+/,\n  /\\s+and\\s+/,\n  /==|!=|<=|>=|<|>|\\s+contains\\s+/\n]\n\nexport function isInteger (str) {\n  return integerLine.test(str)\n}\n\nexport function isLiteral (str) {\n  return literalLine.test(str)\n}\n\nexport function isRange (str) {\n  return rangeLine.test(str)\n}\n\nexport function isVariable (str) {\n  return variableLine.test(str)\n}\n\nexport function matchValue (str) {\n  return value.exec(str)\n}\n\nexport function parseLiteral (str) {\n  let res = str.match(numberLine)\n  if (res) {\n    return Number(str)\n  }\n  res = str.match(boolLine)\n  if (res) {\n    return str.toLowerCase() === 'true'\n  }\n  res = str.match(quotedLine)\n  if (res) {\n    return str.slice(1, -1)\n  }\n  throw new TypeError(`cannot parse '${str}' as literal`)\n}\n","import * as _ from './underscore'\nimport Token from 'src/parser/token'\n\nfunction captureStack () {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor)\n  }\n}\n\nabstract class LiquidError {\n  name: string\n  message: string\n  stack: string\n  private file: string\n  private input: string\n  private token: Token\n  private originalError: Error\n  constructor (err, token) {\n    this.input = token.input\n    this.file = token.file\n    this.originalError = err\n    this.token = token\n  }\n  captureStackTrace (obj) {\n    this.name = obj.constructor.name\n\n    captureStack.call(obj)\n    const err = this.originalError\n    const context = mkContext(this.input, this.token.line)\n    this.message = mkMessage(err.message, this.token)\n    this.stack = this.message + '\\n' + context +\n      '\\n' + (this.stack || this.message) +\n        (err.stack ? '\\nFrom ' + err.stack : '')\n  }\n}\n\nexport class TokenizationError extends LiquidError {\n  constructor (message, token) {\n    super({ message }, token)\n    super.captureStackTrace(this)\n  }\n}\nTokenizationError.prototype = _.create(Error.prototype) as any\nTokenizationError.prototype.constructor = TokenizationError\n\nexport class ParseError extends LiquidError {\n  constructor (err, token) {\n    super(err, token)\n    this.message = err.message\n    super.captureStackTrace(this)\n  }\n}\nParseError.prototype = _.create(Error.prototype) as any\nParseError.prototype.constructor = ParseError\n\nexport class RenderError extends LiquidError {\n  constructor (err, tpl) {\n    super(err, tpl.token)\n    this.message = err.message\n    super.captureStackTrace(this)\n  }\n}\nRenderError.prototype = _.create(Error.prototype) as any\nRenderError.prototype.constructor = RenderError\n\nexport class RenderBreakError {\n  message: string\n  resolvedHTML: string\n  constructor (message) {\n    captureStack.call(this)\n    this.message = message + ''\n  }\n}\nRenderBreakError.prototype = _.create(Error.prototype) as any\nRenderBreakError.prototype.constructor = RenderBreakError\n\nexport class AssertionError {\n  message: string\n  constructor (message) {\n    captureStack.call(this)\n    this.message = message + ''\n  }\n}\nAssertionError.prototype = _.create(Error.prototype) as any\nAssertionError.prototype.constructor = AssertionError\n\nfunction mkContext (input, targetLine) {\n  const lines = input.split('\\n')\n  const begin = Math.max(targetLine - 2, 1)\n  const end = Math.min(targetLine + 3, lines.length)\n\n  const context = _\n    .range(begin, end + 1)\n    .map(lineNumber => {\n      const indicator = (lineNumber === targetLine) ? '>> ' : '   '\n      const num = _.padStart(String(lineNumber), String(end).length)\n      const text = lines[lineNumber - 1]\n      return `${indicator}${num}| ${text}`\n    })\n    .join('\\n')\n\n  return context\n}\n\nfunction mkMessage (msg, token) {\n  msg = msg || ''\n  if (token.file) {\n    msg += ', file:' + token.file\n  }\n  if (token.line) {\n    msg += `, line:${token.line}, col:${token.col}`\n  }\n  return msg\n}\n","import { AssertionError } from './error'\n\nexport default function (predicate: any, message?: string) {\n  if (!predicate) {\n    message = message || `expect ${predicate} to be true`\n    throw new AssertionError(message)\n  }\n}\n","/* eslint-disable camelcase */\n\nimport * as _ from './util/underscore'\n\nexport interface LiquidOptions {\n  /** `root` is a directory or an array of directories to resolve layouts and includes, as well as the filename passed in when calling `.renderFile()`. If an array, the files are looked up in the order they occur in the array. Defaults to `[\".\"]` */\n  root?: string | string[]\n  /** `extname` is used to lookup the template file when filepath doesn't include an extension name. Eg: setting to `\".html\"` will allow including file by basename. Defaults to `\"\"`. */\n  extname?: string\n  /** `cache` indicates whether or not to cache resolved templates. Defaults to `false`. */\n  cache?: boolean\n  /** `dynamicPartials`: if set, treat `<filepath>` parameter in `{%include filepath %}`, `{%layout filepath%}` as a variable, otherwise as a literal value. Defaults to `true`. */\n  dynamicPartials?: boolean\n  /** `strict_filters` is used to enable strict filter existence. If set to `false`, undefined filters will be rendered as empty string. Otherwise, undefined filters will cause an exception. Defaults to `false`. */\n  strict_filters?: boolean\n  /** `strict_variables` is used to enable strict variable derivation.  If set to `false`, undefined variables will be rendered as empty string.  Otherwise, undefined variables will cause an exception. Defaults to `false`. */\n  strict_variables?: boolean\n  /** `trim_tag_right` is used to strip blank characters (including ` `, `\\t`, and `\\r`) from the right of tags (`{% %}`) until `\\n` (inclusive). Defaults to `false`. */\n  trim_tag_right?: boolean\n  /** `trim_tag_left` is similar to `trim_tag_right`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trim_tag_left?: boolean\n  /** ``trim_output_right` is used to strip blank characters (including ` `, `\\t`, and `\\r`) from the right of values (`{{ }}`) until `\\n` (inclusive). Defaults to `false`. */\n  trim_output_right?: boolean\n  /** `trim_output_left` is similar to `trim_output_right`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trim_output_left?: boolean\n  /** `tag_delimiter_left` and `tag_delimiter_right` are used to override the delimiter for liquid tags **/\n  tag_delimiter_left?: string,\n  tag_delimiter_right?: string,\n  /** `output_delimiter_left` and `output_delimiter_right` are used to override the delimiter for liquid outputs **/\n  output_delimiter_left?: string,\n  output_delimiter_right?: string,\n  /** `greedy` is used to specify whether `trim_left`/`trim_right` is greedy. When set to `true`, all consecutive blank characters including `\\n` will be trimed regardless of line breaks. Defaults to `true`. */\n  greedy?: boolean\n}\n\nexport interface NormalizedOptions extends LiquidOptions {\n  root?: string[]\n}\n\nexport interface NormalizedFullOptions extends NormalizedOptions {\n  root: string[]\n  extname: string\n  cache: boolean\n  dynamicPartials: boolean\n  strict_filters: boolean\n  strict_variables: boolean\n  trim_tag_right: boolean\n  trim_tag_left: boolean\n  trim_output_right: boolean\n  trim_output_left: boolean\n  greedy: boolean\n}\n\nconst defaultOptions: NormalizedFullOptions = {\n  root: ['.'],\n  cache: false,\n  extname: '',\n  dynamicPartials: true,\n  trim_tag_right: false,\n  trim_tag_left: false,\n  trim_output_right: false,\n  trim_output_left: false,\n  greedy: true,\n  tag_delimiter_left: '{%',\n  tag_delimiter_right: '%}',\n  output_delimiter_left: '{{',\n  output_delimiter_right: '}}',\n  strict_filters: false,\n  strict_variables: false\n}\n\nexport function normalize (options: LiquidOptions): NormalizedOptions {\n  options = options || {}\n  if (options.hasOwnProperty('root')) {\n    options.root = normalizeStringArray(options.root)\n  }\n  return options as NormalizedOptions\n}\n\nexport function applyDefault (options: NormalizedOptions): NormalizedFullOptions {\n  return { ...defaultOptions, ...options }\n}\n\nfunction normalizeStringArray (value: string | string[]): string[] {\n  if (_.isArray(value)) return value as string[]\n  if (_.isString(value)) return [value as string]\n  return []\n}\n","enum BlockMode {\n  /* store rendered html into blocks */\n  OUTPUT,\n  /* output rendered html directly */\n  STORE\n}\n\nexport default BlockMode\n","import * as _ from '../util/underscore'\nimport * as lexical from '../parser/lexical'\nimport assert from '../util/assert'\nimport { NormalizedFullOptions, applyDefault } from '../liquid-options'\nimport BlockMode from './block-mode'\n\nexport default class Scope {\n  opts: NormalizedFullOptions\n  contexts: Array<object>\n  blocks: object = {}\n  blockMode: BlockMode = BlockMode.OUTPUT\n  constructor (ctx: object = {}, opts?: NormalizedFullOptions) {\n    this.opts = applyDefault(opts)\n    this.contexts = [ctx || {}]\n  }\n  getAll () {\n    return this.contexts.reduce((ctx, val) => _.assign(ctx, val), _.create(null))\n  }\n  get (path: string): any {\n    const paths = this.propertyAccessSeq(path)\n    const scope = this.findContextFor(paths[0]) || _.last(this.contexts)\n    return paths.reduce((value, key) => this.readProperty(value, key), scope)\n  }\n  set (path: string, v: any): void {\n    const paths = this.propertyAccessSeq(path)\n    let scope = this.findContextFor(paths[0]) || _.last(this.contexts)\n    paths.some((key, i) => {\n      if (!_.isObject(scope)) {\n        return true\n      }\n      if (i === paths.length - 1) {\n        scope[key] = v\n        return true\n      }\n      if (undefined === scope[key]) {\n        scope[key] = {}\n      }\n      scope = scope[key]\n    })\n  }\n  unshift (ctx: object) {\n    return this.contexts.unshift(ctx)\n  }\n  push (ctx: object) {\n    return this.contexts.push(ctx)\n  }\n  pop (ctx?: object): object {\n    if (!arguments.length) {\n      return this.contexts.pop()\n    }\n    const i = this.contexts.findIndex(scope => scope === ctx)\n    if (i === -1) {\n      throw new TypeError('scope not found, cannot pop')\n    }\n    return this.contexts.splice(i, 1)[0]\n  }\n  findContextFor (key: string, filter: ((conttext: object) => boolean) = () => true) {\n    for (let i = this.contexts.length - 1; i >= 0; i--) {\n      const candidate = this.contexts[i]\n      if (!filter(candidate)) continue\n      if (key in candidate) {\n        return candidate\n      }\n    }\n    return null\n  }\n  readProperty (obj, key) {\n    let val\n    if (_.isNil(obj)) {\n      val = undefined\n    } else {\n      obj = toLiquid(obj)\n      val = key === 'size' ? readSize(obj) : obj[key]\n      if (_.isFunction(obj.liquid_method_missing)) {\n        val = obj.liquid_method_missing(key)\n      }\n    }\n    if (_.isNil(val) && this.opts.strict_variables) {\n      throw new TypeError(`undefined variable: ${key}`)\n    }\n    return val\n  }\n\n  /*\n   * Parse property access sequence from access string\n   * @example\n   * accessSeq(\"foo.bar\")            // ['foo', 'bar']\n   * accessSeq(\"foo['bar']\")      // ['foo', 'bar']\n   * accessSeq(\"foo['b]r']\")      // ['foo', 'b]r']\n   * accessSeq(\"foo[bar.coo]\")    // ['foo', 'bar'], for bar.coo == 'bar'\n   */\n  propertyAccessSeq (str) {\n    str = String(str)\n    const seq = []\n    let name = ''\n    let j\n    let i = 0\n    while (i < str.length) {\n      switch (str[i]) {\n        case '[':\n          push()\n\n          const delemiter = str[i + 1]\n          if (/['\"]/.test(delemiter)) { // foo[\"bar\"]\n            j = str.indexOf(delemiter, i + 2)\n            assert(j !== -1, `unbalanced ${delemiter}: ${str}`)\n            name = str.slice(i + 2, j)\n            push()\n            i = j + 2\n          } else { // foo[bar.coo]\n            j = matchRightBracket(str, i + 1)\n            assert(j !== -1, `unbalanced []: ${str}`)\n            name = str.slice(i + 1, j)\n            if (!lexical.isInteger(name)) { // foo[bar] vs. foo[1]\n              name = String(this.get(name))\n            }\n            push()\n            i = j + 1\n          }\n          break\n        case '.':// foo.bar, foo[0].bar\n          push()\n          i++\n          break\n        default:// foo.bar\n          name += str[i]\n          i++\n      }\n    }\n    push()\n\n    if (!seq.length) {\n      throw new TypeError(`invalid path:\"${str}\"`)\n    }\n    return seq\n\n    function push () {\n      if (name.length) seq.push(name)\n      name = ''\n    }\n  }\n}\n\nfunction toLiquid (obj) {\n  if (_.isFunction(obj.to_liquid)) {\n    return obj.to_liquid()\n  }\n  if (_.isFunction(obj.toLiquid)) {\n    return obj.toLiquid()\n  }\n  return obj\n}\n\nfunction readSize (obj) {\n  if (!_.isNil(obj.size)) return obj.size\n  if (_.isArray(obj) || _.isString(obj)) return obj.length\n  return obj.size\n}\n\nfunction matchRightBracket (str, begin) {\n  let stack = 1 // count of '[' - count of ']'\n  for (let i = begin; i < str.length; i++) {\n    if (str[i] === '[') {\n      stack++\n    }\n    if (str[i] === ']') {\n      stack--\n      if (stack === 0) {\n        return i\n      }\n    }\n  }\n  return -1\n}\n","export class CaptureScope {}\nexport class AssignScope {}\nexport class IncrementScope {}\nexport class DecrementScope {}\n","import { last } from '../util/underscore'\nimport IFS from './ifs'\n\nfunction domResolve (root, path) {\n  const base = document.createElement('base')\n  base.href = root\n\n  const head = document.getElementsByTagName('head')[0]\n  head.insertBefore(base, head.firstChild)\n\n  const a = document.createElement('a')\n  a.href = path\n  const resolved = a.href\n  head.removeChild(base)\n\n  return resolved\n}\n\nfunction resolve (root, filepath, ext) {\n  if (root.length && last(root) !== '/') root += '/'\n  const url = domResolve(root, filepath)\n  return url.replace(/^(\\w+:\\/\\/[^/]+)(\\/[^?]+)/, (str, origin, path) => {\n    const last = path.split('/').pop()\n    if (/\\.\\w+$/.test(last)) return str\n    return origin + path + ext\n  })\n}\n\nasync function readFile (url: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        resolve(xhr.responseText as string)\n      } else {\n        reject(new Error(xhr.statusText))\n      }\n    }\n    xhr.onerror = () => {\n      reject(new Error('An error occurred whilst receiving the response.'))\n    }\n    xhr.open('GET', url)\n    xhr.send()\n  })\n}\n\nasync function exists () {\n  return true\n}\n\nexport default { readFile, resolve, exists } as IFS\n","export default class Token {\n  type: string\n  line: number\n  col: number\n  raw: string\n  input: string\n  file: string\n  value: string\n  constructor (raw, col, input, file, line) {\n    this.col = col\n    this.line = line\n    this.raw = raw\n    this.input = input\n    this.file = file\n  }\n}\n","import whiteSpaceCtrl from './whitespace-ctrl'\nimport HTMLToken from './html-token'\nimport TagToken from './tag-token'\nimport Token from './token'\nimport OutputToken from './output-token'\nimport { TokenizationError } from 'src/util/error'\nimport { NormalizedFullOptions, applyDefault } from '../liquid-options'\n\nenum ParseState { HTML, OUTPUT, TAG }\n\nexport default class Tokenizer {\n  options: NormalizedFullOptions\n  constructor (options?: NormalizedFullOptions) {\n    this.options = applyDefault(options)\n  }\n  tokenize (input: string, file?: string) {\n    const tokens = []\n    const tagL = this.options.tag_delimiter_left\n    const tagR = this.options.tag_delimiter_right\n    const outputL = this.options.output_delimiter_left\n    const outputR = this.options.output_delimiter_right\n    let p = 0\n    let curLine = 1\n    let state = ParseState.HTML\n    let buffer = ''\n    let lineBegin = 0\n    let line = 1\n    let col = 1\n\n    while (p < input.length) {\n      if (input[p] === '\\n') {\n        curLine++\n        lineBegin = p + 1\n      }\n      if (state === ParseState.HTML) {\n        if (input.substr(p, outputL.length) === outputL) {\n          if (buffer) tokens.push(new HTMLToken(buffer, col, input, file, line))\n          buffer = outputL\n          line = curLine\n          col = p - lineBegin + 1\n          p += outputL.length\n          state = ParseState.OUTPUT\n          continue\n        } else if (input.substr(p, tagL.length) === tagL) {\n          if (buffer) tokens.push(new HTMLToken(buffer, col, input, file, line))\n          buffer = tagL\n          line = curLine\n          col = p - lineBegin + 1\n          p += tagL.length\n          state = ParseState.TAG\n          continue\n        }\n      } else if (state === ParseState.OUTPUT && input.substr(p, outputR.length) === outputR) {\n        buffer += outputR\n        tokens.push(new OutputToken(buffer, buffer.slice(outputL.length, -outputR.length), col, input, file, line))\n        p += outputR.length\n        buffer = ''\n        line = curLine\n        col = p - lineBegin + 1\n        state = ParseState.HTML\n        continue\n      } else if (input.substr(p, tagR.length) === tagR) {\n        buffer += tagR\n        tokens.push(new TagToken(buffer, buffer.slice(tagL.length, -tagR.length), col, input, file, line))\n        p += tagR.length\n        buffer = ''\n        line = curLine\n        col = p - lineBegin + 1\n        state = ParseState.HTML\n        continue\n      }\n      buffer += input[p++]\n    }\n    if (state !== ParseState.HTML) {\n      const t = state === ParseState.OUTPUT ? 'output' : 'tag'\n      const str = buffer.length > 16 ? buffer.slice(0, 13) + '...' : buffer\n      throw new TokenizationError(\n        new Error(`${t} \"${str}\" not closed`),\n        new Token(buffer, col, input, file, line)\n      )\n    }\n    if (buffer) tokens.push(new HTMLToken(buffer, col, input, file, line))\n\n    whiteSpaceCtrl(tokens, this.options)\n    return tokens\n  }\n}\n","import Token from './token'\n\nexport default class HTMLToken extends Token {\n  constructor (str, begin, input, file, line) {\n    super(str, begin, input, file, line)\n    this.type = 'html'\n    this.value = str\n  }\n}\n","import Token from './token'\n\nexport default class DelimitedToken extends Token {\n  trimLeft: boolean\n  trimRight: boolean\n  constructor (raw, value, pos, input, file, line) {\n    super(raw, pos, input, file, line)\n    this.trimLeft = value[0] === '-'\n    this.trimRight = value[value.length - 1] === '-'\n    this.value = value\n      .slice(\n        this.trimLeft ? 1 : 0,\n        this.trimRight ? -1 : value.length\n      )\n      .trim()\n  }\n}\n","import DelimitedToken from './delimited-token'\nimport { TokenizationError } from 'src/util/error'\nimport * as lexical from './lexical'\n\nexport default class TagToken extends DelimitedToken {\n  name: string\n  args: string\n  constructor (raw, value, pos, input, file, line) {\n    super(raw, value, pos, input, file, line)\n    this.type = 'tag'\n    const match = this.value.match(lexical.tagLine)\n    if (!match) {\n      throw new TokenizationError(`illegal tag syntax`, this)\n    }\n    this.name = match[1]\n    this.args = match[2]\n  }\n}\n","import DelimitedToken from './delimited-token'\n\nexport default class OutputToken extends DelimitedToken {\n  constructor (raw, value, pos, input, file, line) {\n    super(raw, value, pos, input, file, line)\n    this.type = 'output'\n  }\n}\n","import DelimitedToken from 'src/parser/delimited-token'\nimport Token from 'src/parser/token'\nimport TagToken from 'src/parser/tag-token'\nimport { NormalizedFullOptions } from 'src/liquid-options'\n\nexport default function whiteSpaceCtrl (tokens: Token[], options: NormalizedFullOptions) {\n  options = { greedy: true, ...options }\n  let inRaw = false\n\n  tokens.forEach((token: Token, i: number) => {\n    if (shouldTrimLeft(token as DelimitedToken, inRaw, options)) {\n      trimLeft(tokens[i - 1], options.greedy)\n    }\n\n    if (token.type === 'tag' && (token as TagToken).name === 'raw') inRaw = true\n    if (token.type === 'tag' && (token as TagToken).name === 'endraw') inRaw = false\n\n    if (shouldTrimRight(token as DelimitedToken, inRaw, options)) {\n      trimRight(tokens[i + 1], options.greedy)\n    }\n  })\n}\n\nfunction shouldTrimLeft (token: DelimitedToken, inRaw: boolean, options) {\n  if (inRaw) return false\n  if (token.type === 'tag') return token.trimLeft || options.trim_tag_left\n  if (token.type === 'output') return token.trimLeft || options.trim_output_left\n}\n\nfunction shouldTrimRight (token: DelimitedToken, inRaw: boolean, options) {\n  if (inRaw) return false\n  if (token.type === 'tag') return token.trimRight || options.trim_tag_right\n  if (token.type === 'output') return token.trimRight || options.trim_output_right\n}\n\nfunction trimLeft (token: Token, greedy: boolean) {\n  if (!token || token.type !== 'html') return\n\n  const rLeft = greedy ? /\\s+$/g : /[\\t\\r ]*$/g\n  token.value = token.value.replace(rLeft, '')\n}\n\nfunction trimRight (token: Token, greedy: boolean) {\n  if (!token || token.type !== 'html') return\n\n  const rRight = greedy ? /^\\s+/g : /^[\\t\\r ]*\\n?/g\n  token.value = token.value.replace(rRight, '')\n}\n","import { RenderBreakError, RenderError } from 'src/util/error'\nimport assert from 'src/util/assert'\n\nexport default class Render {\n  async renderTemplates (templates, scope) {\n    assert(scope, 'unable to evalTemplates: scope undefined')\n\n    let html = ''\n    for (const tpl of templates) {\n      try {\n        html += await tpl.render(scope)\n      } catch (e) {\n        if (e instanceof RenderBreakError) {\n          e.resolvedHTML = html\n          throw e\n        }\n        throw e instanceof RenderError ? e : new RenderError(e, tpl)\n      }\n    }\n    return html\n  }\n}\n","import * as lexical from '../parser/lexical'\nimport assert from '../util/assert'\n\nconst operators = {\n  '==': (l, r) => l === r,\n  '!=': (l, r) => l !== r,\n  '>': (l, r) => l !== null && r !== null && l > r,\n  '<': (l, r) => l !== null && r !== null && l < r,\n  '>=': (l, r) => l !== null && r !== null && l >= r,\n  '<=': (l, r) => l !== null && r !== null && l <= r,\n  'contains': (l, r) => {\n    if (!l) return false\n    if (typeof l.indexOf !== 'function') return false\n    return l.indexOf(r) > -1\n  },\n  'and': (l, r) => isTruthy(l) && isTruthy(r),\n  'or': (l, r) => isTruthy(l) || isTruthy(r)\n}\n\nexport function evalExp (exp, scope) {\n  assert(scope, 'unable to evalExp: scope undefined')\n  const operatorREs = lexical.operators\n  let match\n  for (let i = 0; i < operatorREs.length; i++) {\n    const operatorRE = operatorREs[i]\n    const expRE = new RegExp(`^(${lexical.quoteBalanced.source})(${operatorRE.source})(${lexical.quoteBalanced.source})$`)\n    if ((match = exp.match(expRE))) {\n      const l = evalExp(match[1], scope)\n      const op = operators[match[2].trim()]\n      const r = evalExp(match[3], scope)\n      return op(l, r)\n    }\n  }\n\n  if ((match = exp.match(lexical.rangeLine))) {\n    const low = evalValue(match[1], scope)\n    const high = evalValue(match[2], scope)\n    const range = []\n    for (let j = low; j <= high; j++) {\n      range.push(j)\n    }\n    return range\n  }\n\n  return evalValue(exp, scope)\n}\n\nexport function evalValue (str, scope) {\n  str = str && str.trim()\n  if (!str) return undefined\n\n  if (lexical.isLiteral(str)) {\n    return lexical.parseLiteral(str)\n  }\n  if (lexical.isVariable(str)) {\n    return scope.get(str)\n  }\n  throw new TypeError(`cannot eval '${str}' as value`)\n}\n\nexport function isTruthy (val) {\n  return !isFalsy(val)\n}\n\nexport function isFalsy (val) {\n  return val === false || undefined === val || val === null\n}\n","import { hashCapture } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\n\n/**\n * Key-Value Pairs Representing Tag Arguments\n * Example:\n *    For the markup `{% include 'head.html' foo='bar' %}`,\n *    hash['foo'] === 'bar'\n */\nexport default class Hash {\n  [key: string]: any\n  constructor (markup, scope) {\n    let match\n    hashCapture.lastIndex = 0\n    while ((match = hashCapture.exec(markup))) {\n      const k = match[1]\n      const v = match[2]\n      this[k] = evalValue(v, scope)\n    }\n  }\n}\n","import Token from 'src/parser/token'\n\nexport default class Template {\n  token: Token;\n  constructor (token) {\n    this.token = token\n  }\n}\n","import { create, stringify } from 'src/util/underscore'\nimport assert from 'src/util/assert'\nimport Scope from 'src/scope/scope'\nimport ITagImpl from './itag-impl'\nimport ITagImplOptions from './itag-impl-options'\nimport Liquid from 'src/liquid'\nimport Hash from './hash'\nimport Template from 'src/template/template'\nimport ITemplate from 'src/template/itemplate'\nimport TagToken from 'src/parser/tag-token'\nimport Token from 'src/parser/token'\n\nexport default class Tag extends Template implements ITemplate {\n  name: string\n  token: TagToken\n  private impl: ITagImpl\n  static impls: { [key: string]: ITagImplOptions } = {}\n\n  constructor (token: TagToken, tokens: Token[], liquid: Liquid) {\n    super(token)\n    this.name = token.name\n\n    const impl = Tag.impls[token.name]\n    assert(impl, `tag ${token.name} not found`)\n    this.impl = create<ITagImplOptions, ITagImpl>(impl)\n    this.impl.liquid = liquid\n    if (this.impl.parse) {\n      this.impl.parse(token, tokens)\n    }\n  }\n  async render (scope: Scope) {\n    const hash = new Hash(this.token.args, scope)\n    const impl = this.impl\n    if (typeof impl.render !== 'function') {\n      return ''\n    }\n    const html = await impl.render(scope, hash)\n    return stringify(html)\n  }\n  static register (name: string, tag: ITagImplOptions) {\n    Tag.impls[name] = tag\n  }\n  static clear () {\n    Tag.impls = {}\n  }\n}\n","import assert from 'src/util/assert'\nimport * as lexical from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\nimport Scope from 'src/scope/scope'\n\ntype impl = (value: any, ...args: any[]) => any\n\nconst valueRE = new RegExp(`${lexical.value.source}`, 'g')\n\nexport default class Filter {\n  name: string\n  impl: impl\n  args: string[]\n  private static impls: {[key: string]: impl} = {}\n\n  constructor (str: string, strictFilters: boolean = false) {\n    const match = lexical.filterLine.exec(str)\n    assert(match, 'illegal filter: ' + str)\n\n    const name = match[1]\n    const argList = match[2] || ''\n    const impl = Filter.impls[name]\n    if (!impl && strictFilters) throw new TypeError(`undefined filter: ${name}`)\n\n    this.name = name\n    this.impl = impl || (x => x)\n    this.args = this.parseArgs(argList)\n  }\n  parseArgs (argList: string): string[] {\n    let match; const args = []\n    while ((match = valueRE.exec(argList.trim()))) {\n      const v = match[0]\n      const re = new RegExp(`${v}\\\\s*:`, 'g')\n      const keyMatch = re.exec(match.input)\n      const currentMatchIsKey = keyMatch && keyMatch.index === match.index\n      currentMatchIsKey ? args.push(`'${v}'`) : args.push(v)\n    }\n    return args\n  }\n  render (value: any, scope: Scope): any {\n    const args = this.args.map(arg => evalValue(arg, scope))\n    args.unshift(value)\n    return this.impl.apply(null, args)\n  }\n  static register (name, filter) {\n    Filter.impls[name] = filter\n  }\n  static clear () {\n    Filter.impls = {}\n  }\n}\n","import Token from 'src/parser/token'\nimport ITemplate from 'src/template/itemplate'\n\ntype parseToken = (token: Token, remainTokens: Array<Token>) => ITemplate\ntype eventHandler = ((arg?: Token | ITemplate) => void)\n\nexport default class ParseStream {\n  private tokens: Array<Token>\n  private handlers: {[key: string]: eventHandler} = {}\n  private stopRequested: boolean\n  private parseToken: parseToken\n\n  constructor (tokens: Array<Token>, parseToken: parseToken) {\n    this.tokens = tokens\n    this.parseToken = parseToken\n  }\n  on (name: string, cb: eventHandler) {\n    this.handlers[name] = cb\n    return this\n  }\n  trigger (event: string, arg?: Token | ITemplate) {\n    const h = this.handlers[event]\n    if (typeof h === 'function') {\n      h(arg)\n      return true\n    }\n  }\n  start () {\n    this.trigger('start')\n    let token\n    while (!this.stopRequested && (token = this.tokens.shift())) {\n      if (this.trigger('token', token)) continue\n      if (token.type === 'tag' &&\n          this.trigger(`tag:${token.name}`, token)) {\n        continue\n      }\n      const template = this.parseToken(token, this.tokens)\n      this.trigger('template', template)\n    }\n    if (!this.stopRequested) this.trigger('end')\n    return this\n  }\n  stop () {\n    this.stopRequested = true\n    return this\n  }\n}\n","import { evalExp } from 'src/render/syntax'\nimport * as lexical from 'src/parser/lexical'\nimport assert from 'src/util/assert'\nimport Filter from './filter'\nimport Scope from 'src/scope/scope'\n\nexport default class {\n  initial: any\n  filters: Array<any>\n  constructor (str: string, strictFilters?: boolean) {\n    let match = lexical.matchValue(str)\n    assert(match, `illegal value string: ${str}`)\n\n    const initial = match[0]\n    str = str.substr(match.index + match[0].length)\n\n    const filters = []\n    while ((match = lexical.filter.exec(str))) {\n      filters.push([match[0].trim()])\n    }\n\n    this.initial = initial\n    this.filters = filters.map(str => new Filter(str, strictFilters))\n  }\n  value (scope: Scope) {\n    return this.filters.reduce(\n      (prev, filter) => filter.render(prev, scope),\n      evalExp(this.initial, scope))\n  }\n}\n","import Value from './value'\nimport { stringify } from 'src/util/underscore'\nimport Template from 'src/template/template'\nimport ITemplate from 'src/template/itemplate'\nimport Scope from 'src/scope/scope'\nimport OutputToken from 'src/parser/output-token'\n\nexport default class Output extends Template implements ITemplate {\n  value: Value\n  constructor (token: OutputToken, strictFilters?: boolean) {\n    super(token)\n    this.value = new Value(token.value, strictFilters)\n  }\n  async render (scope: Scope): Promise<string> {\n    const html = await this.value.value(scope)\n    return stringify(html)\n  }\n}\n","import Template from 'src/template/template'\nimport ITemplate from 'src/template/itemplate'\nimport Token from 'src/parser/token'\n\nexport default class extends Template implements ITemplate {\n  str: string\n  constructor (token: Token) {\n    super(token)\n    this.str = token.value\n  }\n  async render (): Promise<string> {\n    return this.str\n  }\n}\n","import { ParseError } from '../util/error'\nimport Liquid from 'src/liquid'\nimport ParseStream from './parse-stream'\nimport Token from './token'\nimport TagToken from './tag-token'\nimport OutputToken from './output-token'\nimport Tag from 'src/template/tag/tag'\nimport Output from 'src/template/output'\nimport HTML from 'src/template/html'\n\nexport default class Parser {\n  liquid: Liquid\n\n  constructor (liquid: Liquid) {\n    this.liquid = liquid\n  }\n  parse (tokens: Array<Token>) {\n    let token\n    const templates = []\n    while ((token = tokens.shift())) {\n      templates.push(this.parseToken(token, tokens))\n    }\n    return templates\n  }\n  parseToken (token: Token, remainTokens: Array<Token>) {\n    try {\n      if (token.type === 'tag') {\n        return new Tag(token as TagToken, remainTokens, this.liquid)\n      }\n      if (token.type === 'output') {\n        return new Output(token as OutputToken, this.liquid.options.strict_filters)\n      }\n      return new HTML(token)\n    } catch (e) {\n      throw new ParseError(e, token)\n    }\n  }\n  parseStream (tokens: Array<Token>) {\n    return new ParseStream(tokens, (token, tokens) => this.parseToken(token, tokens))\n  }\n}\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { AssignScope } from 'src/scope/scopes'\n\nconst re = new RegExp(`(${identifier.source})\\\\s*=([^]*)`)\n\nexport default {\n  parse: function (token) {\n    const match = token.args.match(re)\n    assert(match, `illegal token ${token.raw}`)\n    this.key = match[1]\n    this.value = match[2]\n  },\n  render: function (scope) {\n    const ctx = new AssignScope()\n    ctx[this.key] = this.liquid.evalValue(this.value, scope)\n    scope.push(ctx)\n    return Promise.resolve('')\n  }\n}\n","/*\n * Call functions in serial until someone resolved.\n * @param iterable the array to iterate with.\n * @param iteratee returns a new promise.\n * The iteratee is invoked with three arguments: (value, index, iterable).\n */\nexport function anySeries (iterable, iteratee) {\n  let ret: Promise<any> = Promise.reject(new Error('init'))\n  iterable.forEach(function (item, idx) {\n    ret = ret.catch(() => iteratee(item, idx, iterable))\n  })\n  return ret\n}\n\n/*\n * Call functions in serial until someone rejected.\n * @param {Array} iterable the array to iterate with.\n * @param {Array} iteratee returns a new promise.\n * The iteratee is invoked with three arguments: (value, index, iterable).\n */\nexport function mapSeries (iterable, iteratee) {\n  let ret: Promise<any> = Promise.resolve('init')\n  const result = []\n  iterable.forEach(function (item, idx) {\n    ret = ret\n      .then(() => iteratee(item, idx, iterable))\n      .then(x => result.push(x))\n  })\n  return ret.then(() => result)\n}\n","import { mapSeries } from 'src/util/promise'\nimport { isString, isObject, isArray } from 'src/util/underscore'\nimport { evalExp } from 'src/render/syntax'\nimport assert from 'src/util/assert'\nimport { identifier, value, hash } from 'src/parser/lexical'\nimport { RenderBreakError } from 'src/util/error'\n\nconst re = new RegExp(`^(${identifier.source})\\\\s+in\\\\s+` +\n  `(${value.source})` +\n  `(?:\\\\s+${hash.source})*` +\n  `(?:\\\\s+(reversed))?` +\n  `(?:\\\\s+${hash.source})*$`)\n\nfunction parse (tagToken, remainTokens) {\n  const match = re.exec(tagToken.args)\n  assert(match, `illegal tag: ${tagToken.raw}`)\n  this.variable = match[1]\n  this.collection = match[2]\n  this.reversed = !!match[3]\n\n  this.templates = []\n  this.elseTemplates = []\n\n  let p\n  const stream = this.liquid.parser.parseStream(remainTokens)\n    .on('start', () => (p = this.templates))\n    .on('tag:else', () => (p = this.elseTemplates))\n    .on('tag:endfor', () => stream.stop())\n    .on('template', tpl => p.push(tpl))\n    .on('end', () => {\n      throw new Error(`tag ${tagToken.raw} not closed`)\n    })\n\n  stream.start()\n}\n\nasync function render (scope, hash) {\n  let collection = evalExp(this.collection, scope)\n\n  if (!isArray(collection)) {\n    if (isString(collection) && collection.length > 0) {\n      collection = [collection]\n    } else if (isObject(collection)) {\n      collection = Object.keys(collection).map((key) => [key, collection[key]])\n    }\n  }\n  if (!isArray(collection) || !collection.length) {\n    return this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n\n  const offset = hash.offset || 0\n  const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n  collection = collection.slice(offset, offset + limit)\n  if (this.reversed) collection.reverse()\n\n  const contexts = collection.map((item, i) => {\n    const ctx = {}\n    ctx[this.variable] = item\n    ctx['forloop'] = {\n      first: i === 0,\n      index: i + 1,\n      index0: i,\n      last: i === collection.length - 1,\n      length: collection.length,\n      rindex: collection.length - i,\n      rindex0: collection.length - i - 1\n    }\n    return ctx\n  })\n\n  let html = ''\n  let finished = false\n  await mapSeries(contexts, async context => {\n    if (finished) return\n\n    scope.push(context)\n    try {\n      html += await this.liquid.renderer.renderTemplates(this.templates, scope)\n    } catch (e) {\n      if (e instanceof RenderBreakError) {\n        html += e.resolvedHTML\n        if (e.message === 'break') {\n          finished = true\n        }\n      } else throw e\n    }\n    scope.pop(context)\n  })\n  return html\n}\n\nexport default { parse, render }\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { CaptureScope } from 'src/scope/scopes'\nimport TagToken from 'src/parser/tag-token'\nimport Token from 'src/parser/token'\nimport Scope from 'src/scope/scope'\n\nconst re = new RegExp(`(${identifier.source})`)\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: Token[]) {\n    const match = tagToken.args.match(re)\n    assert(match, `${tagToken.args} not valid identifier`)\n\n    this.variable = match[1]\n    this.templates = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream.on('tag:endcapture', () => stream.stop())\n      .on('template', tpl => this.templates.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n    stream.start()\n  },\n  render: async function (scope: Scope) {\n    const html = await this.liquid.renderer.renderTemplates(this.templates, scope)\n    const ctx = new CaptureScope()\n    ctx[this.variable] = html\n    scope.push(ctx)\n  }\n}\n","import { evalExp } from 'src/render/syntax'\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    this.cond = tagToken.args\n    this.cases = []\n    this.elseTemplates = []\n\n    let p = []\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:when', token => {\n        this.cases.push({\n          val: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endcase', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function (scope) {\n    for (let i = 0; i < this.cases.length; i++) {\n      const branch = this.cases[i]\n      const val = evalExp(branch.val, scope)\n      const cond = evalExp(this.cond, scope)\n      if (val === cond) {\n        return this.liquid.renderer.renderTemplates(branch.templates, scope)\n      }\n    }\n    return this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n}\n","export default {\n  parse: function (tagToken, remainTokens) {\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', token => {\n        if (token.name === 'endcomment') stream.stop()\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n    stream.start()\n  }\n}\n","import assert from 'src/util/assert'\nimport { value, quotedLine } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\nimport BlockMode from 'src/scope/block-mode'\n\nconst staticFileRE = /[^\\s,]+/\nconst withRE = new RegExp(`with\\\\s+(${value.source})`)\n\nexport default {\n  parse: function (token) {\n    let match = staticFileRE.exec(token.args)\n    if (match) {\n      this.staticValue = match[0]\n    }\n\n    match = value.exec(token.args)\n    if (match) {\n      this.value = match[0]\n    }\n\n    match = withRE.exec(token.args)\n    if (match) {\n      this.with = match[1]\n    }\n  },\n  render: async function (scope, hash) {\n    let filepath\n    if (scope.opts.dynamicPartials) {\n      if (quotedLine.exec(this.value)) {\n        const template = this.value.slice(1, -1)\n        filepath = await this.liquid.parseAndRender(template, scope.getAll(), scope.opts)\n      } else {\n        filepath = evalValue(this.value, scope)\n      }\n    } else {\n      filepath = this.staticValue\n    }\n    assert(filepath, `cannot include with empty filename`)\n\n    const originBlocks = scope.blocks\n    const originBlockMode = scope.blockMode\n\n    scope.blocks = {}\n    scope.blockMode = BlockMode.OUTPUT\n    if (this.with) {\n      hash[filepath] = evalValue(this.with, scope)\n    }\n    const templates = await this.liquid.getTemplate(filepath, scope.opts)\n    scope.push(hash)\n    const html = await this.liquid.renderer.renderTemplates(templates, scope)\n    scope.pop(hash)\n    scope.blocks = originBlocks\n    scope.blockMode = originBlockMode\n    return html\n  }\n}\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { CaptureScope, AssignScope, DecrementScope } from 'src/scope/scopes'\nimport TagToken from 'src/parser/tag-token'\nimport Scope from 'src/scope/scope'\n\nexport default {\n  parse: function (token: TagToken) {\n    const match = token.args.match(identifier)\n    assert(match, `illegal identifier ${token.args}`)\n    this.variable = match[0]\n  },\n  render: function (scope: Scope) {\n    let context = scope.findContextFor(\n      this.variable,\n      ctx => {\n        return !(ctx instanceof CaptureScope) && !(ctx instanceof AssignScope)\n      }\n    )\n    if (!context) {\n      context = new DecrementScope()\n      scope.unshift(context)\n    }\n    if (typeof context[this.variable] !== 'number') {\n      context[this.variable] = 0\n    }\n    return --context[this.variable]\n  }\n}\n","import assert from 'src/util/assert'\nimport { value as rValue } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\n\nconst groupRE = new RegExp(`^(?:(${rValue.source})\\\\s*:\\\\s*)?(.*)$`)\nconst candidatesRE = new RegExp(rValue.source, 'g')\n\nexport default {\n  parse: function (tagToken) {\n    let match = groupRE.exec(tagToken.args)\n    assert(match, `illegal tag: ${tagToken.raw}`)\n\n    this.group = match[1] || ''\n    const candidates = match[2]\n\n    this.candidates = []\n\n    while ((match = candidatesRE.exec(candidates))) {\n      this.candidates.push(match[0])\n    }\n    assert(this.candidates.length, `empty candidates: ${tagToken.raw}`)\n  },\n\n  render: function (scope) {\n    const group = evalValue(this.group, scope)\n    const fingerprint = `cycle:${group}:` + this.candidates.join(',')\n\n    const groups = scope.opts.groups = scope.opts.groups || {}\n    let idx = groups[fingerprint]\n\n    if (idx === undefined) {\n      idx = groups[fingerprint] = 0\n    }\n\n    const candidate = this.candidates[idx]\n    idx = (idx + 1) % this.candidates.length\n    groups[fingerprint] = idx\n\n    return evalValue(candidate, scope)\n  }\n}\n","import { evalExp, isTruthy } from 'src/render/syntax'\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    this.branches = []\n    this.elseTemplates = []\n\n    let p\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => this.branches.push({\n        cond: tagToken.args,\n        templates: (p = [])\n      }))\n      .on('tag:elsif', token => {\n        this.branches.push({\n          cond: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endif', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function (scope) {\n    for (const branch of this.branches) {\n      const cond = evalExp(branch.cond, scope)\n      if (isTruthy(cond)) {\n        return this.liquid.renderer.renderTemplates(branch.templates, scope)\n      }\n    }\n    return this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n}\n","import assert from 'src/util/assert'\nimport { identifier } from 'src/parser/lexical'\nimport { CaptureScope, AssignScope, IncrementScope } from 'src/scope/scopes'\n\nexport default {\n  parse: function (token) {\n    const match = token.args.match(identifier)\n    assert(match, `illegal identifier ${token.args}`)\n    this.variable = match[0]\n  },\n  render: function (scope) {\n    let context = scope.findContextFor(\n      this.variable,\n      ctx => {\n        return !(ctx instanceof CaptureScope) && !(ctx instanceof AssignScope)\n      }\n    )\n    if (!context) {\n      context = new IncrementScope()\n      scope.unshift(context)\n    }\n    if (typeof context[this.variable] !== 'number') {\n      context[this.variable] = 0\n    }\n    const val = context[this.variable]\n    context[this.variable]++\n    return val\n  }\n}\n","import assert from 'src/util/assert'\nimport { value as rValue } from 'src/parser/lexical'\nimport { evalValue } from 'src/render/syntax'\nimport BlockMode from 'src/scope/block-mode'\n\nconst staticFileRE = /\\S+/\n\nexport default {\n  parse: function (token, remainTokens) {\n    let match = staticFileRE.exec(token.args)\n    if (match) {\n      this.staticLayout = match[0]\n    }\n\n    match = rValue.exec(token.args)\n    if (match) {\n      this.layout = match[0]\n    }\n\n    this.tpls = this.liquid.parser.parse(remainTokens)\n  },\n  render: async function (scope, hash) {\n    const layout = scope.opts.dynamicPartials\n      ? evalValue(this.layout, scope)\n      : this.staticLayout\n    assert(layout, `cannot apply layout with empty filename`)\n\n    // render the remaining tokens immediately\n    scope.blockMode = BlockMode.STORE\n    const html = await this.liquid.renderer.renderTemplates(this.tpls, scope)\n    if (scope.blocks[''] === undefined) {\n      scope.blocks[''] = html\n    }\n    const templates = await this.liquid.getTemplate(layout, scope.opts)\n    scope.push(hash)\n    scope.blockMode = BlockMode.OUTPUT\n    const partial = await this.liquid.renderer.renderTemplates(templates, scope)\n    scope.pop(hash)\n    return partial\n  }\n}\n","import BlockMode from 'src/scope/block-mode'\n\nexport default {\n  parse: function (token, remainTokens) {\n    const match = /\\w+/.exec(token.args)\n    this.block = match ? match[0] : ''\n\n    this.tpls = []\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:endblock', () => stream.stop())\n      .on('template', tpl => this.tpls.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.raw} not closed`)\n      })\n    stream.start()\n  },\n  render: async function (scope) {\n    const childDefined = scope.blocks[this.block]\n    const html = childDefined !== undefined\n      ? childDefined\n      : await this.liquid.renderer.renderTemplates(this.tpls, scope)\n\n    if (scope.blockMode === BlockMode.STORE) {\n      scope.blocks[this.block] = html\n      return ''\n    }\n    return html\n  }\n}\n","export default {\n  parse: function (tagToken, remainTokens) {\n    this.tokens = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', token => {\n        if (token.name === 'endraw') stream.stop()\n        else this.tokens.push(token)\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n    stream.start()\n  },\n  render: function () {\n    return this.tokens.map(token => token.raw).join('')\n  }\n}\n","import { mapSeries } from 'src/util/promise'\nimport assert from 'src/util/assert'\nimport { evalExp } from 'src/render/syntax'\nimport { identifier, value, hash } from 'src/parser/lexical'\n\nconst re = new RegExp(`^(${identifier.source})\\\\s+in\\\\s+` +\n  `(${value.source})` +\n  `(?:\\\\s+${hash.source})*$`)\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    const match = re.exec(tagToken.args)\n    assert(match, `illegal tag: ${tagToken.raw}`)\n\n    this.variable = match[1]\n    this.collection = match[2]\n    this.templates = []\n\n    let p\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:endtablerow', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: async function (scope, hash) {\n    let collection = evalExp(this.collection, scope) || []\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    const cols = hash.cols || collection.length\n    const contexts = collection.map(item => {\n      const ctx = {}\n      ctx[this.variable] = item\n      return ctx\n    })\n\n    let row\n    let html = ''\n    await mapSeries(contexts, async (context, idx) => {\n      row = Math.floor(idx / cols) + 1\n      const col = (idx % cols) + 1\n      if (col === 1) {\n        if (row !== 1) {\n          html += '</tr>'\n        }\n        html += `<tr class=\"row${row}\">`\n      }\n\n      html += `<td class=\"col${col}\">`\n      scope.push(context)\n      html += await this.liquid.renderer.renderTemplates(this.templates, scope)\n      html += '</td>'\n      scope.pop(context)\n      return html\n    })\n    if (row > 0) {\n      html += '</tr>'\n    }\n    return html\n  }\n}\n","import assign from './assign'\nimport For from './for'\nimport capture from './capture'\nimport Case from './case'\nimport comment from './comment'\nimport include from './include'\nimport decrement from './decrement'\nimport cycle from './cycle'\nimport If from './if'\nimport increment from './increment'\nimport layout from './layout'\nimport block from './block'\nimport raw from './raw'\nimport tablerow from './tablerow'\nimport unless from './unless'\nimport Break from './break'\nimport Continue from './continue'\nimport ITagImplOptions from 'src/template/tag/itag-impl-options'\n\nconst tags: { [key: string]: ITagImplOptions } = {\n  assign, 'for': For, capture, 'case': Case, comment, include, decrement, increment, cycle, 'if': If, layout, block, raw, tablerow, unless, 'break': Break, 'continue': Continue\n}\n\nexport default tags\n","import { evalExp, isFalsy } from 'src/render/syntax'\n\nexport default {\n  parse: function (tagToken, remainTokens) {\n    this.templates = []\n    this.elseTemplates = []\n    let p\n    const stream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => {\n        p = this.templates\n        this.cond = tagToken.args\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endunless', () => stream.stop())\n      .on('template', tpl => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.raw} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function (scope) {\n    const cond = evalExp(this.cond, scope)\n    return isFalsy(cond)\n      ? this.liquid.renderer.renderTemplates(this.templates, scope)\n      : this.liquid.renderer.renderTemplates(this.elseTemplates, scope)\n  }\n}\n","import { RenderBreakError } from 'src/util/error'\n\nexport default {\n  render: async function () {\n    throw new RenderBreakError('break')\n  }\n}\n","import { RenderBreakError } from 'src/util/error'\n\nexport default {\n  render: async function () {\n    throw new RenderBreakError('continue')\n  }\n}\n","const escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n}\nconst unescapeMap = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&#34;': '\"',\n  '&#39;': \"'\"\n}\n\nfunction escape (str) {\n  return String(str).replace(/&|<|>|\"|'/g, m => escapeMap[m])\n}\n\nfunction unescape (str) {\n  return String(str).replace(/&(amp|lt|gt|#34|#39);/g, m => unescapeMap[m])\n}\n\nexport default {\n  'escape': escape,\n  'escape_once': str => escape(unescape(str)),\n  'newline_to_br': v => v.replace(/\\n/g, '<br />'),\n  'strip_html': v => String(v).replace(/<script.*?<\\/script>|<!--.*?-->|<style.*?<\\/style>|<.*?>/g, '')\n}\n","export default {\n  'append': (v, arg) => v + arg,\n  'prepend': (v, arg) => arg + v,\n  'capitalize': str => String(str).charAt(0).toUpperCase() + str.slice(1),\n  'concat': (v, arg) => Array.prototype.concat.call(v, arg),\n  'lstrip': v => String(v).replace(/^\\s+/, ''),\n  'downcase': v => v.toLowerCase(),\n  'upcase': str => String(str).toUpperCase(),\n  'remove': (v, arg) => v.split(arg).join(''),\n  'remove_first': (v, l) => v.replace(l, ''),\n  'replace': (v, pattern, replacement) =>\n    String(v).split(pattern).join(replacement),\n  'replace_first': (v, arg1, arg2) => String(v).replace(arg1, arg2),\n  'rstrip': str => String(str).replace(/\\s+$/, ''),\n  'split': (v, arg) => String(v).split(arg),\n  'strip': (v) => String(v).trim(),\n  'strip_newlines': v => String(v).replace(/\\n/g, ''),\n  'truncate': (v, l, o) => {\n    v = String(v)\n    o = (o === undefined) ? '...' : o\n    l = l || 16\n    if (v.length <= l) return v\n    return v.substr(0, l - o.length) + o\n  },\n  'truncatewords': (v, l, o) => {\n    if (o === undefined) o = '...'\n    const arr = v.split(' ')\n    let ret = arr.slice(0, l).join(' ')\n    if (arr.length > l) ret += o\n    return ret\n  }\n}\n","export default {\n  'abs': v => Math.abs(v),\n  'ceil': v => Math.ceil(v),\n  'divided_by': (v, arg) => v / arg,\n  'floor': v => Math.floor(v),\n  'minus': bindFixed((v, arg) => v - arg),\n  'modulo': bindFixed((v, arg) => v % arg),\n  'round': (v, arg) => {\n    const amp = Math.pow(10, arg || 0)\n    return Math.round(v * amp) / amp\n  },\n  'plus': bindFixed((v, arg) => Number(v) + Number(arg)),\n  'times': (v, arg) => v * arg\n}\n\nfunction getFixed (v) {\n  const p = String(v).split('.')\n  return (p.length > 1) ? p[1].length : 0\n}\n\nfunction bindFixed (cb) {\n  return (l, r) => {\n    const f = Math.max(getFixed(l), getFixed(r))\n    return cb(l, r).toFixed(f)\n  }\n}\n","export default {\n  'url_decode': x => x.split('+').map(decodeURIComponent).join(' '),\n  'url_encode': x => x.split(' ').map(encodeURIComponent).join('+')\n}\n","import { last } from 'src/util/underscore'\n\nexport default {\n  'join': (v, arg) => v.join(arg === undefined ? ' ' : arg),\n  'last': v => last(v),\n  'first': v => v[0],\n  'map': (arr, arg) => arr.map(v => v[arg]),\n  'reverse': v => v.reverse(),\n  'sort': (v, arg) => v.sort(arg),\n  'size': v => v.length,\n  'slice': (v, begin, length) => {\n    if (length === undefined) length = 1\n    return v.slice(begin, begin + length)\n  },\n  'uniq': function (arr) {\n    const u = {}\n    return (arr || []).filter(val => {\n      if (u.hasOwnProperty(val)) {\n        return false\n      }\n      u[val] = true\n      return true\n    })\n  }\n}\n","import { padStart } from './underscore'\n\nconst monthNames = [\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n  'September', 'October', 'November', 'December'\n]\nconst dayNames = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n]\nconst monthNamesShort = monthNames.map(abbr)\nconst dayNamesShort = dayNames.map(abbr)\nconst suffixes = {\n  1: 'st',\n  2: 'nd',\n  3: 'rd',\n  'default': 'th'\n}\n\nfunction abbr (str) {\n  return str.slice(0, 3)\n}\n\n// prototype extensions\nconst _date = {\n  daysInMonth: function (d) {\n    const feb = _date.isLeapYear(d) ? 29 : 28\n    return [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n  },\n\n  getDayOfYear: function (d) {\n    let num = 0\n    for (let i = 0; i < d.getMonth(); ++i) {\n      num += _date.daysInMonth(d)[i]\n    }\n    return num + d.getDate()\n  },\n\n  getWeekOfYear: function (d, startDay) {\n    // Skip to startDay of this week\n    const now = this.getDayOfYear(d) + (startDay - d.getDay())\n    // Find the first startDay of the year\n    const jan1 = new Date(d.getFullYear(), 0, 1)\n    const then = (7 - jan1.getDay() + startDay)\n    return padStart(String(Math.floor((now - then) / 7) + 1), 2, '0')\n  },\n\n  isLeapYear: function (d) {\n    const year = d.getFullYear()\n    return !!((year & 3) === 0 && (year % 100 || (year % 400 === 0 && year)))\n  },\n\n  getSuffix: function (d) {\n    const str = d.getDate().toString()\n    const index = parseInt(str.slice(-1))\n    return suffixes[index] || suffixes['default']\n  },\n\n  century: function (d) {\n    return parseInt(d.getFullYear().toString().substring(0, 2), 10)\n  }\n}\n\nconst formatCodes = {\n  a: function (d) {\n    return dayNamesShort[d.getDay()]\n  },\n  A: function (d) {\n    return dayNames[d.getDay()]\n  },\n  b: function (d) {\n    return monthNamesShort[d.getMonth()]\n  },\n  B: function (d) {\n    return monthNames[d.getMonth()]\n  },\n  c: function (d) {\n    return d.toLocaleString()\n  },\n  C: function (d) {\n    return _date.century(d)\n  },\n  d: function (d) {\n    return padStart(d.getDate(), 2, '0')\n  },\n  e: function (d) {\n    return padStart(d.getDate(), 2)\n  },\n  H: function (d) {\n    return padStart(d.getHours(), 2, '0')\n  },\n  I: function (d) {\n    return padStart(String(d.getHours() % 12 || 12), 2, '0')\n  },\n  j: function (d) {\n    return padStart(_date.getDayOfYear(d), 3, '0')\n  },\n  k: function (d) {\n    return padStart(d.getHours(), 2)\n  },\n  l: function (d) {\n    return padStart(String(d.getHours() % 12 || 12), 2)\n  },\n  L: function (d) {\n    return padStart(d.getMilliseconds(), 3, '0')\n  },\n  m: function (d) {\n    return padStart(d.getMonth() + 1, 2, '0')\n  },\n  M: function (d) {\n    return padStart(d.getMinutes(), 2, '0')\n  },\n  p: function (d) {\n    return (d.getHours() < 12 ? 'AM' : 'PM')\n  },\n  P: function (d) {\n    return (d.getHours() < 12 ? 'am' : 'pm')\n  },\n  q: function (d) {\n    return _date.getSuffix(d)\n  },\n  s: function (d) {\n    return Math.round(d.valueOf() / 1000)\n  },\n  S: function (d) {\n    return padStart(d.getSeconds(), 2, '0')\n  },\n  u: function (d) {\n    return d.getDay() || 7\n  },\n  U: function (d) {\n    return _date.getWeekOfYear(d, 0)\n  },\n  w: function (d) {\n    return d.getDay()\n  },\n  W: function (d) {\n    return _date.getWeekOfYear(d, 1)\n  },\n  x: function (d) {\n    return d.toLocaleDateString()\n  },\n  X: function (d) {\n    return d.toLocaleTimeString()\n  },\n  y: function (d) {\n    return d.getFullYear().toString().substring(2, 4)\n  },\n  Y: function (d) {\n    return d.getFullYear()\n  },\n  z: function (d) {\n    const tz = d.getTimezoneOffset() / 60 * 100\n    return (tz > 0 ? '-' : '+') + padStart(String(Math.abs(tz)), 4, '0')\n  },\n  '%': function () {\n    return '%'\n  }\n};\n(formatCodes as any).h = formatCodes.b;\n(formatCodes as any).N = formatCodes.L\n\nexport default function (d, format) {\n  let output = ''\n  let remaining = format\n\n  while (true) {\n    const r = /%./g\n    const results = r.exec(remaining)\n\n    // No more format codes. Add the remaining text and return\n    if (!results) {\n      return output + remaining\n    }\n\n    // Add the preceding text\n    output += remaining.slice(0, r.lastIndex - 2)\n    remaining = remaining.slice(r.lastIndex)\n\n    // Add the format code\n    const ch = results[0].charAt(1)\n    const func = formatCodes[ch]\n    output += func ? func.call(this, d) : '%' + ch\n  }\n}\n","import html from './html'\nimport str from './string'\nimport math from './math'\nimport url from './url'\nimport array from './array'\nimport date from './date'\nimport obj from './object'\n\nexport default { ...html, ...str, ...math, ...url, ...date, ...obj, ...array }\n","import strftime from 'src/util/strftime'\nimport { isString } from 'src/util/underscore'\n\nexport default {\n  'date': (v, arg) => {\n    let date = v\n    if (v === 'now') {\n      date = new Date()\n    } else if (isString(v)) {\n      date = new Date(v)\n    }\n    return isValidDate(date) ? strftime(date, arg) : v\n  }\n}\n\nfunction isValidDate (date) {\n  return date instanceof Date && !isNaN(date.getTime())\n}\n","import { isTruthy } from 'src/render/syntax'\n\nexport default {\n  'default': (v, arg) => isTruthy(v) ? v : arg\n}\n","import Scope from './scope/scope'\nimport * as Types from './types'\nimport fs from 'src/fs'\nimport * as _ from './util/underscore'\nimport ITemplate from './template/itemplate'\nimport Tokenizer from './parser/tokenizer'\nimport Render from './render/render'\nimport Tag from './template/tag/tag'\nimport Filter from './template/filter'\nimport Parser from './parser/parser'\nimport ITagImplOptions from './template/tag/itag-impl-options'\nimport Value from './template/value'\nimport { isTruthy, isFalsy, evalExp, evalValue } from './render/syntax'\nimport builtinTags from './builtin/tags'\nimport builtinFilters from './builtin/filters'\nimport { LiquidOptions, NormalizedFullOptions, applyDefault, normalize } from './liquid-options'\n\nexport default class Liquid {\n  public options: NormalizedFullOptions\n  private cache: object\n  private parser: Parser\n  private renderer: Render\n  private tokenizer: Tokenizer\n\n  constructor (opts: LiquidOptions = {}) {\n    this.options = applyDefault(normalize(opts))\n    if (this.options.cache) {\n      this.cache = {}\n    }\n    this.parser = new Parser(this)\n    this.renderer = new Render()\n    this.tokenizer = new Tokenizer(this.options)\n\n    _.forOwn(builtinTags, (conf, name) => this.registerTag(name, conf))\n    _.forOwn(builtinFilters, (handler, name) => this.registerFilter(name, handler))\n  }\n  parse (html: string, filepath?: string) {\n    const tokens = this.tokenizer.tokenize(html, filepath)\n    return this.parser.parse(tokens)\n  }\n  render (tpl: Array<ITemplate>, ctx?: object, opts?: LiquidOptions) {\n    const options = { ...this.options, ...normalize(opts) }\n    const scope = new Scope(ctx, options)\n    return this.renderer.renderTemplates(tpl, scope)\n  }\n  async parseAndRender (html: string, ctx?: object, opts?: LiquidOptions) {\n    const tpl = await this.parse(html)\n    return this.render(tpl, ctx, opts)\n  }\n  async getTemplate (file, opts?: LiquidOptions) {\n    const options = normalize(opts)\n    const roots = options.root ? [...options.root, ...this.options.root] : this.options.root\n    const paths = roots.map(root => fs.resolve(root, file, this.options.extname))\n\n    for (const filepath of paths) {\n      if (!(await fs.exists(filepath))) continue\n\n      if (this.options.cache && this.cache[filepath]) return this.cache[filepath]\n      const value = this.parse(await fs.readFile(filepath), filepath)\n      if (this.options.cache) this.cache[filepath] = value\n      return value\n    }\n\n    const err = new Error('ENOENT') as any\n    err.message = `ENOENT: Failed to lookup \"${file}\" in \"${roots}\"`\n    err.code = 'ENOENT'\n    throw err\n  }\n  async renderFile (file, ctx?: object, opts?: LiquidOptions) {\n    const options = normalize(opts)\n    const templates = await this.getTemplate(file, options)\n    return this.render(templates, ctx, opts)\n  }\n  evalValue (str: string, scope: Scope) {\n    return new Value(str, this.options.strict_filters).value(scope)\n  }\n  registerFilter (name, filter) {\n    return Filter.register(name, filter)\n  }\n  registerTag (name: string, tag: ITagImplOptions) {\n    return Tag.register(name, tag)\n  }\n  plugin (plugin) {\n    return plugin.call(this, Liquid)\n  }\n  express () {\n    const self = this\n    return function (filePath: string, ctx: object, cb: (err: Error, html?: string) => void) {\n      const opts = { root: this.root }\n      self.renderFile(filePath, ctx, opts).then(html => cb(null, html), cb)\n    }\n  }\n  static default = Liquid\n  static isTruthy = isTruthy\n  static isFalsy = isFalsy\n  static evalExp = evalExp\n  static evalValue = evalValue\n  static Types = Types\n}\n"],"names":["toStr","Object","prototype","toString","arrToStr","Array","isString","value","call","isFunction","stringify","isNil","to_liquid","toLiquid","to_s","indexOf","cache","JSON","key","isObject","push","create","proto","isArray","forOwn","object","iteratee","k","hasOwnProperty","last","arr","length","type","padStart","str","ch","n","String","quoted","RegExp","source","quoteBalanced","number","bool","identifier","subscript","literal","variable","rangeLimit","range","rangeCapture","hash","hashCapture","tagLine","literalLine","variableLine","numberLine","boolLine","quotedLine","rangeLine","integerLine","valueDeclaration","valueList","filter","filterCapture","filterLine","operators","captureStack","Error","captureStackTrace","this","constructor","err","token","input","file","originalError","LiquidError","obj","name","targetLine","lines","begin","end","context","line","split","Math","max","min","start","stop","step","arguments","i","_\r\n        .range","map","lineNumber","indicator","num","_.padStart","text","join","message","msg","col","mkMessage","stack","_super","_this","tslib_1.__extends","TokenizationError","_.create","ParseError","tpl","RenderError","RenderBreakError","predicate","AssertionError","BlockMode","defaultOptions","root","extname","dynamicPartials","trim_tag_right","trim_tag_left","trim_output_right","trim_output_left","greedy","tag_delimiter_left","tag_delimiter_right","output_delimiter_left","output_delimiter_right","strict_filters","strict_variables","normalize","options","_.isArray","_.isString","applyDefault","ctx","opts","OUTPUT","contexts","Scope","reduce","val","_i","srcs","forEach","src","target","binaryAssign","_.assign","path","paths","propertyAccessSeq","scope","findContextFor","_.last","readProperty","v","some","_.isObject","undefined","unshift","pop","findIndex","TypeError","splice","candidate","_.isNil","_.isFunction","size","liquid_method_missing","j","seq","delemiter","test","assert","slice","matchRightBracket","get","readFile","url","Promise","resolve","reject","xhr","XMLHttpRequest","onload","status","responseText","statusText","onerror","open","send","filepath","ext","base","document","createElement","href","head","getElementsByTagName","insertBefore","firstChild","a","resolved","removeChild","domResolve","replace","origin","exists","ParseState","raw","Token","pos","trimLeft","trimRight","trim","match","lexical.tagLine","args","DelimitedToken","Tokenizer","tokens","tagL","tagR","outputL","outputR","p","curLine","state","HTML","buffer","lineBegin","substr","HTMLToken","TAG","OutputToken","TagToken","inRaw","rLeft","rRight","whiteSpaceCtrl","t","Render","templates","html","templates_1","_a","render","_b","e_1","resolvedHTML","==","l","r","!=",">","<",">=","<=","contains","and","isTruthy","or","evalExp","exp","operatorREs","lexical.operators","operatorRE","expRE","lexical.quoteBalanced","op","lexical.rangeLine","low","evalValue","high","res","Number","toLowerCase","lexical.parseLiteral","isFalsy","markup","lastIndex","exec","liquid","impl","Tag","impls","parse","Hash","tag","Template","valueRE","lexical.value","strictFilters","lexical.filterLine","argList","Filter","x","parseArgs","keyMatch","index","arg","apply","parseToken","ParseStream","cb","handlers","event","h","trigger","stopRequested","shift","template","initial","filters","lexical.filter","default_1","prev","Value","Output","Parser","remainTokens","e","re","AssignScope","mapSeries","iterable","ret","result","item","idx","then","tagToken","collection","reversed","elseTemplates","stream","parser","parseStream","on","keys","offset","limit","reverse","first","index0","rindex","rindex0","finished","renderer","renderTemplates","CaptureScope","cond","cases","branch","staticFileRE","withRE","staticValue","with","parseAndRender","getAll","originBlocks","blocks","originBlockMode","blockMode","getTemplate","DecrementScope","groupRE","rValue","candidatesRE","group","candidates","fingerprint","groups","branches","IncrementScope","staticLayout","layout","tpls","STORE","partial","block","childDefined","tags","assign","for","For","capture","case","Case","comment","include","decrement","increment","cycle","if","If","tablerow","cols","row","floor","unless","break","continue","escapeMap","&","\"","'","unescapeMap","&amp;","&lt;","&gt;","&#34;","&#39;","escape","m","escape_once","newline_to_br","strip_html","append","prepend","capitalize","charAt","toUpperCase","concat","lstrip","downcase","upcase","remove","remove_first","pattern","replacement","replace_first","arg1","arg2","rstrip","strip","strip_newlines","truncate","o","truncatewords","abs","ceil","divided_by","minus","bindFixed","modulo","round","amp","pow","plus","times","getFixed","f","toFixed","url_decode","decodeURIComponent","url_encode","encodeURIComponent","sort","uniq","u","monthNames","dayNames","monthNamesShort","abbr","dayNamesShort","suffixes","1","2","3","default","_date","daysInMonth","d","isLeapYear","getDayOfYear","getMonth","getDate","getWeekOfYear","startDay","now","getDay","Date","getFullYear","year","getSuffix","parseInt","century","substring","formatCodes","A","b","B","c","toLocaleString","C","H","getHours","I","L","getMilliseconds","M","getMinutes","P","q","s","valueOf","S","getSeconds","U","w","W","toLocaleDateString","X","toLocaleTimeString","y","Y","z","tz","getTimezoneOffset","%","N","math","date","isNaN","getTime","format","output","remaining","results","func","strftime","array","tokenizer","_.forOwn","builtinTags","conf","registerTag","builtinFilters","handler","registerFilter","Liquid","tokenize","roots","fs","paths_1","code","register","plugin","self","filePath","renderFile","Types"],"mappings":"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"}